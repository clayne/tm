TEST_CASE("generated test 0") {
    tmi_uint128_t a = tmi_from_string("7204E52DB2221A58008A05A6C4647159", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("7D4BEDC51431193E6C3F3391A2B8F1F", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x6);
    CHECK(tml::to_string(a, 10) == "151557408999110657826917604970069258585");
    CHECK(tml::to_string(b, 10) == "10409234017673608357083055217615539999");
    CHECK(tml::to_string(a, 2) == "1110010000001001110010100101101101100100010001000011010010110000000000010001010000001011010011011000100011001000111000101011001");
    CHECK(tml::to_string(b, 2) == "111110101001011111011011100010100010100001100010001100100111110011011000011111100110011100100011010001010111000111100011111");
    CHECK(tml::to_string(a, 16) == "7204E52DB2221A58008A05A6C4647159");
    CHECK(tml::to_string(b, 16) == "7D4BEDC51431193E6C3F3391A2B8F1F");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "79D9A40A03652BEBE74DF8DFDE900078");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6A30265160DF08C419C6126DAA38E23A");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "2F0E703284BFD8B76B93BF18F76D70C7");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "E");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "46275214077244161D2B88756029DA7");
    CHECK(tmi_fls(b) == 122ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "204A40C100210100082012000200119");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "77D4FFFDF3631BDBE6CBF7BFDE6FFF5F");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "75D05BF1E3610BCBE649F69FDE4FFE46");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "81394B6C88869600228169B1191C5640");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1C81394B6C88869600228169B1191C5");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "F52FB71450C464F9B0FCCE468AE3C7C0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "1F52FB71450C464F9B0FCCE468AE3C");
    CHECK(tml::to_string(tmi_inc(a), 16) == "7204E52DB2221A58008A05A6C464715A");
    CHECK(tml::to_string(tmi_inc(b), 16) == "7D4BEDC51431193E6C3F3391A2B8F20");
    CHECK(tml::to_string(tmi_dec(a), 16) == "7204E52DB2221A58008A05A6C4647158");
    CHECK(tml::to_string(tmi_dec(b), 16) == "7D4BEDC51431193E6C3F3391A2B8F1E");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "7204E52DB2221A58008A05A6C4647159");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "7D4BEDC51431193E6C3F3391A2B8F5F");
    CHECK(tmi_low(a) == 0x008A05A6C4647159ull);
    CHECK(tmi_low(b) == 0xE6C3F3391A2B8F1Full);
    CHECK(tmi_high(a) == 0x7204E52DB2221A58ull);
    CHECK(tmi_high(b) == 0x07D4BEDC51431193ull);
    CHECK(tmi_popcount(a) == 49ull);
    CHECK(tmi_popcount(b) == 66ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x59, 0x71, 0x64, 0xc4, 0xa6, 0x5, 0x8a, 0x0, 0x58, 0x1a, 0x22, 0xb2, 0x2d, 0xe5, 0x4, 0x72});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x1f, 0x8f, 0x2b, 0x1a, 0x39, 0xf3, 0xc3, 0xe6, 0x93, 0x11, 0x43, 0x51, 0xdc, 0xbe, 0xd4, 0x7});
}

TEST_CASE("generated test 1") {
    tmi_uint128_t a = tmi_from_string("F8130C4237730EDFAFBD67F9619699CF", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("8D88348A7EED8D14F06D3FEF701966A0", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x58);
    CHECK(tml::to_string(a, 10) == "329747445230106040215425340715931441615");
    CHECK(tml::to_string(b, 10) == "188128365436501984388929261673503090336");
    CHECK(tml::to_string(a, 2) == "11111000000100110000110001000010001101110111001100001110110111111010111110111101011001111111100101100001100101101001100111001111");
    CHECK(tml::to_string(b, 2) == "10001101100010000011010010001010011111101110110110001101000101001111000001101101001111111110111101110000000110010110011010100000");
    CHECK(tml::to_string(a, 16) == "F8130C4237730EDFAFBD67F9619699CF");
    CHECK(tml::to_string(b, 16) == "8D88348A7EED8D14F06D3FEF701966A0");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "859B40CCB6609BF4A02AA7E8D1B0006F");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6A8AD7B7B88581CABF502809F17D332F");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "E4F4085E68C5A82348714CFF949F9B60");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "6A8AD7B7B88581CABF502809F17D332F");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 5ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "8800040236610C14A02D27E960100080");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "FD9B3CCA7FFF8FDFFFFD7FFF719FFFEF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "759B38C8499E83CB5FD05816118FFF6F");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "F9619699CF0000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "F8130C4237");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "EF701966A00000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "8D88348A7E");
    CHECK(tml::to_string(tmi_inc(a), 16) == "F8130C4237730EDFAFBD67F9619699D0");
    CHECK(tml::to_string(tmi_inc(b), 16) == "8D88348A7EED8D14F06D3FEF701966A1");
    CHECK(tml::to_string(tmi_dec(a), 16) == "F8130C4237730EDFAFBD67F9619699CE");
    CHECK(tml::to_string(tmi_dec(b), 16) == "8D88348A7EED8D14F06D3FEF7019669F");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "F8130C4237730EDFAFBD67F9619699CF");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "8D88348A7FED8D14F06D3FEF701966A0");
    CHECK(tmi_low(a) == 0xAFBD67F9619699CFull);
    CHECK(tmi_low(b) == 0xF06D3FEF701966A0ull);
    CHECK(tmi_high(a) == 0xF8130C4237730EDFull);
    CHECK(tmi_high(b) == 0x8D88348A7EED8D14ull);
    CHECK(tmi_popcount(a) == 72ull);
    CHECK(tmi_popcount(b) == 64ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xcf, 0x99, 0x96, 0x61, 0xf9, 0x67, 0xbd, 0xaf, 0xdf, 0xe, 0x73, 0x37, 0x42, 0xc, 0x13, 0xf8});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xa0, 0x66, 0x19, 0x70, 0xef, 0x3f, 0x6d, 0xf0, 0x14, 0x8d, 0xed, 0x7e, 0x8a, 0x34, 0x88, 0x8d});
}

TEST_CASE("generated test 2") {
    tmi_uint128_t a = tmi_from_string("C2CD789A380208A9AD45F23D3B1A11DF", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("5805975ED2F89D94A2F20AAF3C64AF7", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x19);
    CHECK(tml::to_string(a, 10) == "258937098145896403714898000925565784543");
    CHECK(tml::to_string(b, 10) == "7312568454372194282243981778218273527");
    CHECK(tml::to_string(a, 2) == "11000010110011010111100010011010001110000000001000001000101010011010110101000101111100100011110100111011000110100001000111011111");
    CHECK(tml::to_string(b, 2) == "101100000000101100101110101111011010010111110001001110110010100101000101111001000001010101011110011110001100100101011110111");
    CHECK(tml::to_string(a, 16) == "C2CD789A380208A9AD45F23D3B1A11DF");
    CHECK(tml::to_string(b, 16) == "5805975ED2F89D94A2F20AAF3C64AF7");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "C84DD21025319282F77512E82EE05CD6");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "BD4D1F244AD27ED06316D1924753C6E8");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "EEBBF7C325D534DD20749F600ECBB429");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "23");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2413D7ACA822FF488D47ADDE6FDD21A");
    CHECK(tmi_fls(b) == 122ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "8058102802088908052028330200D7");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "C7CD79FFFD2F89F9EF6FF2BFFBDE5BFF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "C74D21EFD52D8170E76AD297C8DC5B28");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "34700411535A8BE47A763423BE000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "6166BC4D1C010454D6A2F91E9D");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "EBDA5F13B2945E4155E78C95EE000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "2C02CBAF697C4ECA517905579");
    CHECK(tml::to_string(tmi_inc(a), 16) == "C2CD789A380208A9AD45F23D3B1A11E0");
    CHECK(tml::to_string(tmi_inc(b), 16) == "5805975ED2F89D94A2F20AAF3C64AF8");
    CHECK(tml::to_string(tmi_dec(a), 16) == "C2CD789A380208A9AD45F23D3B1A11DE");
    CHECK(tml::to_string(tmi_dec(b), 16) == "5805975ED2F89D94A2F20AAF3C64AF6");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "C2CD789A380208A9AD45F23D3B1A11DF");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "5805975ED2F89D94A2F20AAF3C64AF7");
    CHECK(tmi_low(a) == 0xAD45F23D3B1A11DFull);
    CHECK(tmi_low(b) == 0x4A2F20AAF3C64AF7ull);
    CHECK(tmi_high(a) == 0xC2CD789A380208A9ull);
    CHECK(tmi_high(b) == 0x05805975ED2F89D9ull);
    CHECK(tmi_popcount(a) == 60ull);
    CHECK(tmi_popcount(b) == 64ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xdf, 0x11, 0x1a, 0x3b, 0x3d, 0xf2, 0x45, 0xad, 0xa9, 0x8, 0x2, 0x38, 0x9a, 0x78, 0xcd, 0xc2});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xf7, 0x4a, 0xc6, 0xf3, 0xaa, 0x20, 0x2f, 0x4a, 0xd9, 0x89, 0x2f, 0xed, 0x75, 0x59, 0x80, 0x5});
}

TEST_CASE("generated test 3") {
    tmi_uint128_t a = tmi_from_string("DA71144896C8DA1964B2D2BC815A47C5", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("CC22AF58BE6521CC3E2434E37AF027BC", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x6A);
    CHECK(tml::to_string(a, 10) == "290358844025411436456937318132274055109");
    CHECK(tml::to_string(b, 10) == "271342605685996375488876704593758660540");
    CHECK(tml::to_string(a, 2) == "11011010011100010001010001001000100101101100100011011010000110010110010010110010110100101011110010000001010110100100011111000101");
    CHECK(tml::to_string(b, 2) == "11001100001000101010111101011000101111100110010100100001110011000011111000100100001101001110001101111010111100000010011110111100");
    CHECK(tml::to_string(a, 16) == "DA71144896C8DA1964B2D2BC815A47C5");
    CHECK(tml::to_string(b, 16) == "CC22AF58BE6521CC3E2434E37AF027BC");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "A693C3A1552DFBE5A2D7079FFC4A6F81");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "E4E64EFD863B84D268E9DD9066A2009");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "9DB3A92A0BA5748D6F216CA9E9EBB7AC");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "E4E64EFD863B84D268E9DD9066A2009");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "C820044896400008242010A000500784");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "DE73BF58BEEDFBDD7EB6F6FFFBFA67FD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "1653BB1028ADFBD55A96E65FFBAA6079");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "691F1400000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "369C45");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "C09EF000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "3308AB");
    CHECK(tml::to_string(tmi_inc(a), 16) == "DA71144896C8DA1964B2D2BC815A47C6");
    CHECK(tml::to_string(tmi_inc(b), 16) == "CC22AF58BE6521CC3E2434E37AF027BD");
    CHECK(tml::to_string(tmi_dec(a), 16) == "DA71144896C8DA1964B2D2BC815A47C4");
    CHECK(tml::to_string(tmi_dec(b), 16) == "CC22AF58BE6521CC3E2434E37AF027BB");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "DA71144896C8DA1964B2D2BC815A47C5");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "CC22AF58BE6521CC3E2434E37AF027BC");
    CHECK(tmi_low(a) == 0x64B2D2BC815A47C5ull);
    CHECK(tmi_low(b) == 0x3E2434E37AF027BCull);
    CHECK(tmi_high(a) == 0xDA71144896C8DA19ull);
    CHECK(tmi_high(b) == 0xCC22AF58BE6521CCull);
    CHECK(tmi_popcount(a) == 58ull);
    CHECK(tmi_popcount(b) == 64ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xc5, 0x47, 0x5a, 0x81, 0xbc, 0xd2, 0xb2, 0x64, 0x19, 0xda, 0xc8, 0x96, 0x48, 0x14, 0x71, 0xda});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xbc, 0x27, 0xf0, 0x7a, 0xe3, 0x34, 0x24, 0x3e, 0xcc, 0x21, 0x65, 0xbe, 0x58, 0xaf, 0x22, 0xcc});
}

TEST_CASE("generated test 4") {
    tmi_uint128_t a = tmi_from_string("BCFBB050ACAB1A6BC69D4BD8B3FA7AA7", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("82283D15A9EC0806705FCA161622BD79", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x29);
    CHECK(tml::to_string(a, 10) == "251201705814837942449885806603273927335");
    CHECK(tml::to_string(b, 10) == "173008570269746003185029197286747585913");
    CHECK(tml::to_string(a, 2) == "10111100111110111011000001010000101011001010101100011010011010111100011010011101010010111101100010110011111110100111101010100111");
    CHECK(tml::to_string(b, 2) == "10000010001010000011110100010101101010011110110000001000000001100111000001011111110010100001011000010110001000101011110101111001");
    CHECK(tml::to_string(a, 16) == "BCFBB050ACAB1A6BC69D4BD8B3FA7AA7");
    CHECK(tml::to_string(b, 16) == "82283D15A9EC0806705FCA161622BD79");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "3F23ED665697227236FD15EECA1D3820");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "3AD3733B02BF1265563D81C29DD7BD2E");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "43A30B6C34F0EE2563DE9475A21F43EF");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "3AD3733B02BF1265563D81C29DD7BD2E");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "80283010A8A80802401D4A1012223821");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BEFBBD55ADEF1A6FF6DFCBDEB7FAFFFF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "3ED38D450547126DB6C281CEA5D8C7DE");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "5634D78D3A97B167F4F54E0000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "5E7DD82856558D35E34EA5");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "D8100CE0BF942C2C457AF20000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "41141E8AD4F60403382FE5");
    CHECK(tml::to_string(tmi_inc(a), 16) == "BCFBB050ACAB1A6BC69D4BD8B3FA7AA8");
    CHECK(tml::to_string(tmi_inc(b), 16) == "82283D15A9EC0806705FCA161622BD7A");
    CHECK(tml::to_string(tmi_dec(a), 16) == "BCFBB050ACAB1A6BC69D4BD8B3FA7AA6");
    CHECK(tml::to_string(tmi_dec(b), 16) == "82283D15A9EC0806705FCA161622BD78");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "BCFBB050ACAB1A6BC69D4BD8B3FA7AA7");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "82283D15A9EC0806705FCA161622BD79");
    CHECK(tmi_low(a) == 0xC69D4BD8B3FA7AA7ull);
    CHECK(tmi_low(b) == 0x705FCA161622BD79ull);
    CHECK(tmi_high(a) == 0xBCFBB050ACAB1A6Bull);
    CHECK(tmi_high(b) == 0x82283D15A9EC0806ull);
    CHECK(tmi_popcount(a) == 72ull);
    CHECK(tmi_popcount(b) == 56ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xa7, 0x7a, 0xfa, 0xb3, 0xd8, 0x4b, 0x9d, 0xc6, 0x6b, 0x1a, 0xab, 0xac, 0x50, 0xb0, 0xfb, 0xbc});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x79, 0xbd, 0x22, 0x16, 0x16, 0xca, 0x5f, 0x70, 0x6, 0x8, 0xec, 0xa9, 0x15, 0x3d, 0x28, 0x82});
}

TEST_CASE("generated test 5") {
    tmi_uint128_t a = tmi_from_string("5EDA92D864AC5DB9D707107E855C3844", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("B21FBAC78255D6807923986BB968A43", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x64);
    CHECK(tml::to_string(a, 10) == "126082330695184799532289483152683710532");
    CHECK(tml::to_string(b, 10) == "14797958299203565469402862716517255747");
    CHECK(tml::to_string(a, 2) == "1011110110110101001001011011000011001001010110001011101101110011101011100000111000100000111111010000101010111000011100001000100");
    CHECK(tml::to_string(b, 2) == "1011001000011111101110101100011110000010010101011101011010000000011110010010001110011000011010111011100101101000101001000011");
    CHECK(tml::to_string(a, 16) == "5EDA92D864AC5DB9D707107E855C3844");
    CHECK(tml::to_string(b, 16) == "B21FBAC78255D6807923986BB968A43");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "69FC8E84DCD1BB21DE994A0540F2C287");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "53B8972BEC870051CF74D6F7C9C5AE01");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "2D34E23B9C80CE6A74DE9DBB414F61CC");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "8");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "5CAB574A38172799A754448A8A7E62C");
    CHECK(tmi_fls(b) == 123ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 2ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "A00928860245D280702100681140840");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "5FFBFBFC7CAD5DF9D79739FEBFDEBA47");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "55FB69741C8900D1D09529F83ECAB207");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "55C38440000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "5EDA92D");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "B968A430000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "B21FBA");
    CHECK(tml::to_string(tmi_inc(a), 16) == "5EDA92D864AC5DB9D707107E855C3845");
    CHECK(tml::to_string(tmi_inc(b), 16) == "B21FBAC78255D6807923986BB968A44");
    CHECK(tml::to_string(tmi_dec(a), 16) == "5EDA92D864AC5DB9D707107E855C3843");
    CHECK(tml::to_string(tmi_dec(b), 16) == "B21FBAC78255D6807923986BB968A42");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "5EDA92D864AC5DB9D707107E855C3844");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "B21FBBC78255D6807923986BB968A43");
    CHECK(tmi_low(a) == 0xD707107E855C3844ull);
    CHECK(tmi_low(b) == 0x07923986BB968A43ull);
    CHECK(tmi_high(a) == 0x5EDA92D864AC5DB9ull);
    CHECK(tmi_high(b) == 0x0B21FBAC78255D68ull);
    CHECK(tmi_popcount(a) == 62ull);
    CHECK(tmi_popcount(b) == 60ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x44, 0x38, 0x5c, 0x85, 0x7e, 0x10, 0x7, 0xd7, 0xb9, 0x5d, 0xac, 0x64, 0xd8, 0x92, 0xda, 0x5e});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x43, 0x8a, 0x96, 0xbb, 0x86, 0x39, 0x92, 0x7, 0x68, 0x5d, 0x25, 0x78, 0xac, 0xfb, 0x21, 0xb});
}

TEST_CASE("generated test 6") {
    tmi_uint128_t a = tmi_from_string("8092B4D42B28FEF02B9C014EA5AC06D8", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("3B6FE5078C5FE8F8DC3BF364EB8AC8CE", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x58);
    CHECK(tml::to_string(a, 10) == "170902926445271843256718674296126047960");
    CHECK(tml::to_string(b, 10) == "79005441972447625708006749481904818382");
    CHECK(tml::to_string(a, 2) == "10000000100100101011010011010100001010110010100011111110111100000010101110011100000000010100111010100101101011000000011011011000");
    CHECK(tml::to_string(b, 2) == "111011011011111110010100000111100011000101111111101000111110001101110000111011111100110110010011101011100010101100100011001110");
    CHECK(tml::to_string(a, 16) == "8092B4D42B28FEF02B9C014EA5AC06D8");
    CHECK(tml::to_string(b, 16) == "3B6FE5078C5FE8F8DC3BF364EB8AC8CE");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "BC0299DBB788E7E907D7F4B39136CFA6");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "4522CFCC9EC915F74F600DE9BA213E0A");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "86BC58ADB8590E6314826C1BAE3641D0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "2");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "9B2EAC512692CFE73241A84CE96753C");
    CHECK(tmi_fls(b) == 125ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 3ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "2A4040808E8F008180144A18800C8");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BBFFF5D7AF7FFEF8FFBFF36EEFAECEDE");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "BBFD51D3A7771608F7A7F22A4E26CE16");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "4EA5AC06D80000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "8092B4D42B");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "64EB8AC8CE0000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "3B6FE5078C");
    CHECK(tml::to_string(tmi_inc(a), 16) == "8092B4D42B28FEF02B9C014EA5AC06D9");
    CHECK(tml::to_string(tmi_inc(b), 16) == "3B6FE5078C5FE8F8DC3BF364EB8AC8CF");
    CHECK(tml::to_string(tmi_dec(a), 16) == "8092B4D42B28FEF02B9C014EA5AC06D7");
    CHECK(tml::to_string(tmi_dec(b), 16) == "3B6FE5078C5FE8F8DC3BF364EB8AC8CD");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "8092B4D42B28FEF02B9C014EA5AC06D8");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "3B6FE5078D5FE8F8DC3BF364EB8AC8CE");
    CHECK(tmi_low(a) == 0x2B9C014EA5AC06D8ull);
    CHECK(tmi_low(b) == 0xDC3BF364EB8AC8CEull);
    CHECK(tmi_high(a) == 0x8092B4D42B28FEF0ull);
    CHECK(tmi_high(b) == 0x3B6FE5078C5FE8F8ull);
    CHECK(tmi_popcount(a) == 56ull);
    CHECK(tmi_popcount(b) == 73ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xd8, 0x6, 0xac, 0xa5, 0x4e, 0x1, 0x9c, 0x2b, 0xf0, 0xfe, 0x28, 0x2b, 0xd4, 0xb4, 0x92, 0x80});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xce, 0xc8, 0x8a, 0xeb, 0x64, 0xf3, 0x3b, 0xdc, 0xf8, 0xe8, 0x5f, 0x8c, 0x7, 0xe5, 0x6f, 0x3b});
}

TEST_CASE("generated test 7") {
    tmi_uint128_t a = tmi_from_string("5A702CFA93EA5C4ED8F33418F3D4E711", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("81355C53F0E642F43328AD088DED3C96", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x7C);
    CHECK(tml::to_string(a, 10) == "120212969147639139493044009178584377105");
    CHECK(tml::to_string(b, 10) == "171747475821932289583036241625979108502");
    CHECK(tml::to_string(a, 2) == "1011010011100000010110011111010100100111110101001011100010011101101100011110011001101000001100011110011110101001110011100010001");
    CHECK(tml::to_string(b, 2) == "10000001001101010101110001010011111100001110011001000010111101000011001100101000101011010000100010001101111011010011110010010110");
    CHECK(tml::to_string(a, 16) == "5A702CFA93EA5C4ED8F33418F3D4E711");
    CHECK(tml::to_string(b, 16) == "81355C53F0E642F43328AD088DED3C96");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "DBA5894E84D09F430C1BE12181C223A7");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "D93AD0A6A304195AA5CA871065E7AA7B");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "B7CB65D08D7DFCF4149214AB0CA45FF6");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "5A702CFA93EA5C4ED8F33418F3D4E711");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "300C5290E240441020240881C42410");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "DB757CFBF3EE5EFEFBFBBD18FFFDFF97");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "DB4570A9630C1EBAEBDB99107E39DB87");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "10000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "5");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "60000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "8");
    CHECK(tml::to_string(tmi_inc(a), 16) == "5A702CFA93EA5C4ED8F33418F3D4E712");
    CHECK(tml::to_string(tmi_inc(b), 16) == "81355C53F0E642F43328AD088DED3C97");
    CHECK(tml::to_string(tmi_dec(a), 16) == "5A702CFA93EA5C4ED8F33418F3D4E710");
    CHECK(tml::to_string(tmi_dec(b), 16) == "81355C53F0E642F43328AD088DED3C95");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "5A702CFA93EA5C4ED8F33418F3D4E711");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "91355C53F0E642F43328AD088DED3C96");
    CHECK(tmi_low(a) == 0xD8F33418F3D4E711ull);
    CHECK(tmi_low(b) == 0x3328AD088DED3C96ull);
    CHECK(tmi_high(a) == 0x5A702CFA93EA5C4Eull);
    CHECK(tmi_high(b) == 0x81355C53F0E642F4ull);
    CHECK(tmi_popcount(a) == 66ull);
    CHECK(tmi_popcount(b) == 60ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x11, 0xe7, 0xd4, 0xf3, 0x18, 0x34, 0xf3, 0xd8, 0x4e, 0x5c, 0xea, 0x93, 0xfa, 0x2c, 0x70, 0x5a});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x96, 0x3c, 0xed, 0x8d, 0x8, 0xad, 0x28, 0x33, 0xf4, 0x42, 0xe6, 0xf0, 0x53, 0x5c, 0x35, 0x81});
}

TEST_CASE("generated test 8") {
    tmi_uint128_t a = tmi_from_string("589890086A17B9AF5B569643D037CDFF", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("EE52BDB6D1020A15D9ED17E3CC0E95EE", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x8);
    CHECK(tml::to_string(a, 10) == "117764214085212209777202276562078518783");
    CHECK(tml::to_string(b, 10) == "316785879198835333909515185710250759662");
    CHECK(tml::to_string(a, 2) == "1011000100110001001000000001000011010100001011110111001101011110101101101010110100101100100001111010000001101111100110111111111");
    CHECK(tml::to_string(b, 2) == "11101110010100101011110110110110110100010000001000001010000101011101100111101101000101111110001111001100000011101001010111101110");
    CHECK(tml::to_string(a, 16) == "589890086A17B9AF5B569643D037CDFF");
    CHECK(tml::to_string(b, 16) == "EE52BDB6D1020A15D9ED17E3CC0E95EE");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "46EB4DBF3B19C3C53543AE279C4663ED");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6A45D2519915AF9981697E6004293811");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "3115BEAAC0ADF2B312A7988D86B8EE12");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "589890086A17B9AF5B569643D037CDFF");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "481090004002080559441643C00685EE");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "FEDABDBEFB17BBBFDBFF97E3DC3FDDFF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "B6CA2DBEBB15B3BA82BB81A01C395811");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "9890086A17B9AF5B569643D037CDFF00");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "589890086A17B9AF5B569643D037CD");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "52BDB6D1020A15D9ED17E3CC0E95EE00");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "EE52BDB6D1020A15D9ED17E3CC0E95");
    CHECK(tml::to_string(tmi_inc(a), 16) == "589890086A17B9AF5B569643D037CE00");
    CHECK(tml::to_string(tmi_inc(b), 16) == "EE52BDB6D1020A15D9ED17E3CC0E95EF");
    CHECK(tml::to_string(tmi_dec(a), 16) == "589890086A17B9AF5B569643D037CDFE");
    CHECK(tml::to_string(tmi_dec(b), 16) == "EE52BDB6D1020A15D9ED17E3CC0E95ED");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "589890086A17B9AF5B569643D037CDFF");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "EE52BDB6D1020A15D9ED17E3CC0E95EE");
    CHECK(tmi_low(a) == 0x5B569643D037CDFFull);
    CHECK(tmi_low(b) == 0xD9ED17E3CC0E95EEull);
    CHECK(tmi_high(a) == 0x589890086A17B9AFull);
    CHECK(tmi_high(b) == 0xEE52BDB6D1020A15ull);
    CHECK(tmi_popcount(a) == 65ull);
    CHECK(tmi_popcount(b) == 67ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xff, 0xcd, 0x37, 0xd0, 0x43, 0x96, 0x56, 0x5b, 0xaf, 0xb9, 0x17, 0x6a, 0x8, 0x90, 0x98, 0x58});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xee, 0x95, 0xe, 0xcc, 0xe3, 0x17, 0xed, 0xd9, 0x15, 0xa, 0x2, 0xd1, 0xb6, 0xbd, 0x52, 0xee});
}

TEST_CASE("generated test 9") {
    tmi_uint128_t a = tmi_from_string("12093D26AC512B01F18DD1EED77C96C0", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("44C5B4763FE31D0347FC816AC16E2284", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x2F);
    CHECK(tml::to_string(a, 10) == "23974074886840845233137434099879548608");
    CHECK(tml::to_string(b, 10) == "91414046396929593173100193178832478852");
    CHECK(tml::to_string(a, 2) == "10010000010010011110100100110101011000101000100101011000000011111000110001101110100011110111011010111011111001001011011000000");
    CHECK(tml::to_string(b, 2) == "1000100110001011011010001110110001111111110001100011101000000110100011111111100100000010110101011000001011011100010001010000100");
    CHECK(tml::to_string(a, 16) == "12093D26AC512B01F18DD1EED77C96C0");
    CHECK(tml::to_string(b, 16) == "44C5B4763FE31D0347FC816AC16E2284");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "56CEF19CEC344805398A535998EAB944");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "CD4388B06C6E0DFEA9915084160E743C");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "D8088AC383AD9D794EA4A8752EC33B00");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "12093D26AC512B01F18DD1EED77C96C0");
    CHECK(tmi_fls(b) == 126ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 124ull);
    CHECK(tmi_ffs(a) == 6ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "134262C410901418C816AC16C0280");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "56CDBD76BFF33F03F7FDD1EED77EB6C4");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "56CC895093B23602B67150841612B444");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "9580F8C6E8F76BBE4B60000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "24127A4D58A25603E31B");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "8E81A3FE40B560B71142000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "898B68EC7FC63A068FF9");
    CHECK(tml::to_string(tmi_inc(a), 16) == "12093D26AC512B01F18DD1EED77C96C1");
    CHECK(tml::to_string(tmi_inc(b), 16) == "44C5B4763FE31D0347FC816AC16E2285");
    CHECK(tml::to_string(tmi_dec(a), 16) == "12093D26AC512B01F18DD1EED77C96BF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "44C5B4763FE31D0347FC816AC16E2283");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "12093D26AC512B01F18DD1EED77C96C0");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "44C5B4763FE31D0347FC816AC16E2284");
    CHECK(tmi_low(a) == 0xF18DD1EED77C96C0ull);
    CHECK(tmi_low(b) == 0x47FC816AC16E2284ull);
    CHECK(tmi_high(a) == 0x12093D26AC512B01ull);
    CHECK(tmi_high(b) == 0x44C5B4763FE31D03ull);
    CHECK(tmi_popcount(a) == 60ull);
    CHECK(tmi_popcount(b) == 60ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xc0, 0x96, 0x7c, 0xd7, 0xee, 0xd1, 0x8d, 0xf1, 0x1, 0x2b, 0x51, 0xac, 0x26, 0x3d, 0x9, 0x12});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x84, 0x22, 0x6e, 0xc1, 0x6a, 0x81, 0xfc, 0x47, 0x3, 0x1d, 0xe3, 0x3f, 0x76, 0xb4, 0xc5, 0x44});
}

TEST_CASE("generated test 10") {
    tmi_uint128_t a = tmi_from_string("2ADF559A11CBC2880000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("4B63E0EFB62AC1FE0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x52);
    CHECK(tml::to_string(a, 10) == "56987194233880646568015728761775325184");
    CHECK(tml::to_string(b, 10) == "100210699324523660060474503195910995968");
    CHECK(tml::to_string(a, 2) == "101010110111110101010110011010000100011100101111000010100010000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1001011011000111110000011101111101101100010101011000001111111100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "2ADF559A11CBC2880000000000000000");
    CHECK(tml::to_string(b, 16) == "4B63E0EFB62AC1FE0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "76433689C7F684860000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "DF7B74AA5BA1008A0000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2ADF559A11CBC2880000000000000000");
    CHECK(tmi_fls(b) == 126ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 125ull);
    CHECK(tmi_ffs(a) == 67ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "A43408A100AC0880000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "6BFFF5FFB7EBC3FE0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "61BCB575A7E103760000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "AB7D5668472");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "12D8F83BED8A");
    CHECK(tml::to_string(tmi_inc(a), 16) == "2ADF559A11CBC2880000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "4B63E0EFB62AC1FE0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "2ADF559A11CBC287FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "4B63E0EFB62AC1FDFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "2ADF559A11CFC2880000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "4B63E0EFB62EC1FE0000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x2ADF559A11CBC288ull);
    CHECK(tmi_high(b) == 0x4B63E0EFB62AC1FEull);
    CHECK(tmi_popcount(a) == 30ull);
    CHECK(tmi_popcount(b) == 36ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0xc2, 0xcb, 0x11, 0x9a, 0x55, 0xdf, 0x2a});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xc1, 0x2a, 0xb6, 0xef, 0xe0, 0x63, 0x4b});
}

TEST_CASE("generated test 11") {
    tmi_uint128_t a = tmi_from_string("60CEA631D3B993F0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("CBD3F5E06BC153850000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x42);
    CHECK(tml::to_string(a, 10) == "8042429473494372164406859549030481920");
    CHECK(tml::to_string(b, 10) == "270933844752298681827462841760978305024");
    CHECK(tml::to_string(a, 2) == "110000011001110101001100011000111010011101110011001001111110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "11001011110100111111010111100000011010111100000101010011100001010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "60CEA631D3B993F0000000000000000");
    CHECK(tml::to_string(b, 16) == "CBD3F5E06BC153850000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "D1E0E04388FCECC40000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "3A38F482B17A45BA0000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "60CEA631D3B993F0000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 122ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "200E060090111050000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "CFDFFFE37FFBDBBF0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "CDDF1F8376FACABA0000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1833A98C74EE64F");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "32F4FD781AF054E1");
    CHECK(tml::to_string(tmi_inc(a), 16) == "60CEA631D3B993F0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "CBD3F5E06BC153850000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "60CEA631D3B993EFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "CBD3F5E06BC15384FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "60CEA631D3B993F0000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "CBD3F5E06BC153850000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x060CEA631D3B993Full);
    CHECK(tmi_high(b) == 0xCBD3F5E06BC15385ull);
    CHECK(tmi_popcount(a) == 32ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3f, 0x99, 0x3b, 0x1d, 0x63, 0xea, 0xc, 0x6});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x85, 0x53, 0xc1, 0x6b, 0xe0, 0xf5, 0xd3, 0xcb});
}

TEST_CASE("generated test 12") {
    tmi_uint128_t a = tmi_from_string("9B0BCA16F72F2BB80000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("39B21C95055455E80000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x65);
    CHECK(tml::to_string(a, 10) == "206091553478365179750598786709335310336");
    CHECK(tml::to_string(b, 10) == "76690804314673901444303625958423789568");
    CHECK(tml::to_string(a, 2) == "10011011000010111100101000010110111101110010111100101011101110000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "111001101100100001110010010101000001010101010001010101111010000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "9B0BCA16F72F2BB80000000000000000");
    CHECK(tml::to_string(b, 16) == "39B21C95055455E80000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "D4BDE6ABFC8381A00000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6159AD81F1DAD5D00000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "2");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "27A790ECEC867FE80000000000000000");
    CHECK(tmi_fls(b) == 125ull);
    CHECK(tmi_ffs(b) == 67ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 67ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "19020814050401A80000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BBBBDE97F77F7FF80000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "A2B9D683F27B7E500000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "4D85E50");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "1CD90E4");
    CHECK(tml::to_string(tmi_inc(a), 16) == "9B0BCA16F72F2BB80000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "39B21C95055455E80000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "9B0BCA16F72F2BB7FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "39B21C95055455E7FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "9B0BCA36F72F2BB80000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "39B21CB5055455E80000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x9B0BCA16F72F2BB8ull);
    CHECK(tmi_high(b) == 0x39B21C95055455E8ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 28ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x2b, 0x2f, 0xf7, 0x16, 0xca, 0xb, 0x9b});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x55, 0x54, 0x5, 0x95, 0x1c, 0xb2, 0x39});
}

TEST_CASE("generated test 13") {
    tmi_uint128_t a = tmi_from_string("F5BB9188B80599E90000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("AD9CEDDE819D7CA70000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x38);
    CHECK(tml::to_string(a, 10) == "326634770261225046316518131676938764288");
    CHECK(tml::to_string(b, 10) == "230771266140563979009665946912596951040");
    CHECK(tml::to_string(a, 2) == "11110101101110111001000110001000101110000000010110011001111010010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "10101101100111001110110111011110100000011001110101111100101001110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "F5BB9188B80599E90000000000000000");
    CHECK(tml::to_string(b, 16) == "AD9CEDDE819D7CA70000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "A3587F6739A316900000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "481EA3AA36681D420000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "481EA3AA36681D420000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "A5988188800518A10000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "FDBFFDDEB99DFDEF0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "58277C563998E54E0000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "E9000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "F5BB9188B80599E900");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "A7000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "AD9CEDDE819D7CA700");
    CHECK(tml::to_string(tmi_inc(a), 16) == "F5BB9188B80599E90000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "AD9CEDDE819D7CA70000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "F5BB9188B80599E8FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "AD9CEDDE819D7CA6FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "F5BB9188B80599E90100000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "AD9CEDDE819D7CA70100000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0xF5BB9188B80599E9ull);
    CHECK(tmi_high(b) == 0xAD9CEDDE819D7CA7ull);
    CHECK(tmi_popcount(a) == 32ull);
    CHECK(tmi_popcount(b) == 38ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe9, 0x99, 0x5, 0xb8, 0x88, 0x91, 0xbb, 0xf5});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa7, 0x7c, 0x9d, 0x81, 0xde, 0xed, 0x9c, 0xad});
}

TEST_CASE("generated test 14") {
    tmi_uint128_t a = tmi_from_string("6D21F4CDA185CC8E0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("F7C882F4202CC8280000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0xC);
    CHECK(tml::to_string(a, 10) == "145062162536592925587474591374551023616");
    CHECK(tml::to_string(b, 10) == "329360430385458972592112351882785062912");
    CHECK(tml::to_string(a, 2) == "1101101001000011111010011001101101000011000010111001100100011100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "11110111110010001000001011110100001000000010110011001000001010000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "6D21F4CDA185CC8E0000000000000000");
    CHECK(tml::to_string(b, 16) == "F7C882F4202CC8280000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "64EA77C1C1B294B60000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "755971D9815904660000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "6D21F4CDA185CC8E0000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 67ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 65ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "650080C42004C8080000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "FFE9F6FDA1ADCCAE0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "9AE9763981A904A60000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "1F4CDA185CC8E0000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "6D21F4CDA185CC8E0000000000000");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "882F4202CC8280000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "F7C882F4202CC8280000000000000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "6D21F4CDA185CC8E0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "F7C882F4202CC8280000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "6D21F4CDA185CC8DFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "F7C882F4202CC827FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "6D21F4CDA185CC8E0000000000001000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "F7C882F4202CC8280000000000001000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x6D21F4CDA185CC8Eull);
    CHECK(tmi_high(b) == 0xF7C882F4202CC828ull);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 26ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0xcc, 0x85, 0xa1, 0xcd, 0xf4, 0x21, 0x6d});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0xc8, 0x2c, 0x20, 0xf4, 0x82, 0xc8, 0xf7});
}

TEST_CASE("generated test 15") {
    tmi_uint128_t a = tmi_from_string("1391F9B9DBC799B00000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("BE6C6FE94C41D9C00000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x6A);
    CHECK(tml::to_string(a, 10) == "26013280009620845153823991069356851200");
    CHECK(tml::to_string(b, 10) == "253116357091084117614611173482138959872");
    CHECK(tml::to_string(a, 2) == "10011100100011111100110111001110110111100011110011001101100000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "10111110011011000110111111101001010011000100000111011001110000000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "1391F9B9DBC799B00000000000000000");
    CHECK(tml::to_string(b, 16) == "BE6C6FE94C41D9C00000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "D1FE69A3280973700000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "552589D08F85BFF00000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "1391F9B9DBC799B00000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 70ull);
    CHECK(tmi_fls(a) == 124ull);
    CHECK(tmi_ffs(a) == 68ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "120069A9484199800000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BFFDFFF9DFC7D9F00000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "ADFD9650978640700000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "4E47E");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "2F9B1B");
    CHECK(tml::to_string(tmi_inc(a), 16) == "1391F9B9DBC799B00000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "BE6C6FE94C41D9C00000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "1391F9B9DBC799AFFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "BE6C6FE94C41D9BFFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "1391FDB9DBC799B00000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "BE6C6FE94C41D9C00000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x1391F9B9DBC799B0ull);
    CHECK(tmi_high(b) == 0xBE6C6FE94C41D9C0ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x99, 0xc7, 0xdb, 0xb9, 0xf9, 0x91, 0x13});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xd9, 0x41, 0x4c, 0xe9, 0x6f, 0x6c, 0xbe});
}

TEST_CASE("generated test 16") {
    tmi_uint128_t a = tmi_from_string("91FDE85CE69BAE290000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("82458CC89F7A7DAF0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x60);
    CHECK(tml::to_string(a, 10) == "194056423373410869669961813349422333952");
    CHECK(tml::to_string(b, 10) == "173160763367611179706167815698508677120");
    CHECK(tml::to_string(a, 2) == "10010001111111011110100001011100111001101001101110101110001010010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "10000010010001011000110011001000100111110111101001111101101011110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "91FDE85CE69BAE290000000000000000");
    CHECK(tml::to_string(b, 16) == "82458CC89F7A7DAF0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "1443752586162BD80000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FB85B944721307A0000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "FB85B944721307A0000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "80458848861A2C290000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "93FDECDCFFFBFFAF0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "13B8649479E1D3860000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "91FDE85C");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "82458CC8");
    CHECK(tml::to_string(tmi_inc(a), 16) == "91FDE85CE69BAE290000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "82458CC89F7A7DAF0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "91FDE85CE69BAE28FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "82458CC89F7A7DAEFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "91FDE85DE69BAE290000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "82458CC99F7A7DAF0000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x91FDE85CE69BAE29ull);
    CHECK(tmi_high(b) == 0x82458CC89F7A7DAFull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0xae, 0x9b, 0xe6, 0x5c, 0xe8, 0xfd, 0x91});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xaf, 0x7d, 0x7a, 0x9f, 0xc8, 0x8c, 0x45, 0x82});
}

TEST_CASE("generated test 17") {
    tmi_uint128_t a = tmi_from_string("976699CC6ED5D1BF0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("AA7C314BF01DBF290000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x4B);
    CHECK(tml::to_string(a, 10) == "201246161048609203619933621148637462528");
    CHECK(tml::to_string(b, 10) == "226613603948389148455467450587932524544");
    CHECK(tml::to_string(a, 2) == "10010111011001101001100111001100011011101101010111010001101111110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "10101010011111000011000101001011111100000001110110111111001010010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "976699CC6ED5D1BF0000000000000000");
    CHECK(tml::to_string(b, 16) == "AA7C314BF01DBF290000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "41E2CB185EF390E80000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "ECEA68807EB812960000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "976699CC6ED5D1BF0000000000000000");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "82641148601591290000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BF7EB9CFFEDDFFBF0000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "3D1AA8879EC86E960000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "12ECD3398DDABA");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "154F86297E03B7");
    CHECK(tml::to_string(tmi_inc(a), 16) == "976699CC6ED5D1BF0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "AA7C314BF01DBF290000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "976699CC6ED5D1BEFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "AA7C314BF01DBF28FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "976699CC6ED5D9BF0000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "AA7C314BF01DBF290000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x976699CC6ED5D1BFull);
    CHECK(tmi_high(b) == 0xAA7C314BF01DBF29ull);
    CHECK(tmi_popcount(a) == 38ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbf, 0xd1, 0xd5, 0x6e, 0xcc, 0x99, 0x66, 0x97});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0xbf, 0x1d, 0xf0, 0x4b, 0x31, 0x7c, 0xaa});
}

TEST_CASE("generated test 18") {
    tmi_uint128_t a = tmi_from_string("4806AA81E65150B50000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("2298BDB1C85F0D460000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x6D);
    CHECK(tml::to_string(a, 10) == "95739027779010593317394369600945127424");
    CHECK(tml::to_string(b, 10) == "45986828439996201267932721560955125760");
    CHECK(tml::to_string(a, 2) == "1001000000001101010101010000001111001100101000101010000101101010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "100010100110001011110110110001110010000101111100001101010001100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "4806AA81E65150B50000000000000000");
    CHECK(tml::to_string(b, 16) == "2298BDB1C85F0D460000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "6A9F6833AEB05DFB0000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "256DECD01DF2436F0000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "2");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2D52F1E559336290000000000000000");
    CHECK(tmi_fls(b) == 125ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "A881C05100040000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "6A9EBFB1EE5F5DF70000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "6A9E17302E0E5DF30000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "24035");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "114C5");
    CHECK(tml::to_string(tmi_inc(a), 16) == "4806AA81E65150B50000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "2298BDB1C85F0D460000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "4806AA81E65150B4FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "2298BDB1C85F0D45FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "4806AA81E65150B50000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "2298BDB1C85F0D460000000000000000");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x4806AA81E65150B5ull);
    CHECK(tmi_high(b) == 0x2298BDB1C85F0D46ull);
    CHECK(tmi_popcount(a) == 25ull);
    CHECK(tmi_popcount(b) == 30ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb5, 0x50, 0x51, 0xe6, 0x81, 0xaa, 0x6, 0x48});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0xd, 0x5f, 0xc8, 0xb1, 0xbd, 0x98, 0x22});
}

TEST_CASE("generated test 19") {
    tmi_uint128_t a = tmi_from_string("88C9DA8AAFE673F60000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("3C116549885342060000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0xA);
    CHECK(tml::to_string(a, 10) == "181823091648532559368174722248913977344");
    CHECK(tml::to_string(b, 10) == "79844003142906490769522182462417928192");
    CHECK(tml::to_string(a, 2) == "10001000110010011101101010001010101011111110011001110011111101100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "111100000100010110010101001001100010000101001101000010000001100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "88C9DA8AAFE673F60000000000000000");
    CHECK(tml::to_string(b, 16) == "3C116549885342060000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "C4DB3FD43839B5FC0000000000000000");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "4CB87541279331F00000000000000000");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "2");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "10A70FF79F3FEFEA0000000000000000");
    CHECK(tmi_fls(b) == 125ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 65ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "8014008884242060000000000000000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BCD9FFCBAFF773F60000000000000000");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "B4D8BFC327B531F00000000000000000");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "276A2ABF99CFD8000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "223276A2ABF99CFD80000000000000");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "459526214D0818000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "F0459526214D08180000000000000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "88C9DA8AAFE673F60000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "3C116549885342060000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "88C9DA8AAFE673F5FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "3C11654988534205FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "88C9DA8AAFE673F60000000000000400");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "3C116549885342060000000000000400");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x88C9DA8AAFE673F6ull);
    CHECK(tmi_high(b) == 0x3C11654988534206ull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 23ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf6, 0x73, 0xe6, 0xaf, 0x8a, 0xda, 0xc9, 0x88});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x42, 0x53, 0x88, 0x49, 0x65, 0x11, 0x3c});
}

TEST_CASE("generated test 20") {
    tmi_uint128_t a = tmi_from_string("3685156B89C80C4D", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("8181E84D99A74924", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x56);
    CHECK(tml::to_string(a, 10) == "3928569801567898701");
    CHECK(tml::to_string(b, 10) == "9331995322876381476");
    CHECK(tml::to_string(a, 2) == "11011010000101000101010110101110001001110010000000110001001101");
    CHECK(tml::to_string(b, 2) == "1000000110000001111010000100110110011001101001110100100100100100");
    CHECK(tml::to_string(a, 16) == "3685156B89C80C4D");
    CHECK(tml::to_string(b, 16) == "8181E84D99A74924");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "B806FDB9236F5571");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFFB5032D1DF020C329");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "1B94BA541DC84C689870996C76DEAFD4");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "3685156B89C80C4D");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 61ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "81004989800804");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "B785FD6F99EF4D6D");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "B704FD26106F4569");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "5AE27203134000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "136669D2490000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "3685156B89C80C4E");
    CHECK(tml::to_string(tmi_inc(b), 16) == "8181E84D99A74925");
    CHECK(tml::to_string(tmi_dec(a), 16) == "3685156B89C80C4C");
    CHECK(tml::to_string(tmi_dec(b), 16) == "8181E84D99A74923");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "4000003685156B89C80C4D");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "4000008181E84D99A74924");
    CHECK(tmi_low(a) == 0x3685156B89C80C4Dull);
    CHECK(tmi_low(b) == 0x8181E84D99A74924ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 27ull);
    CHECK(tmi_popcount(b) == 26ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x4d, 0xc, 0xc8, 0x89, 0x6b, 0x15, 0x85, 0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x24, 0x49, 0xa7, 0x99, 0x4d, 0xe8, 0x81, 0x81, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 21") {
    tmi_uint128_t a = tmi_from_string("1AB1C42FC52F4FBE", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("D418F7AF25B7501A", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x60);
    CHECK(tml::to_string(a, 10) == "1923534225314631614");
    CHECK(tml::to_string(b, 10) == "15283237667105886234");
    CHECK(tml::to_string(a, 2) == "1101010110001110001000010111111000101001011110100111110111110");
    CHECK(tml::to_string(b, 2) == "1101010000011000111101111010111100100101101101110101000000011010");
    CHECK(tml::to_string(a, 16) == "1AB1C42FC52F4FBE");
    CHECK(tml::to_string(b, 16) == "D418F7AF25B7501A");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "EECABBDEEAE69FD8");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFF4698CC809F77FFA4");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "161DD0F5BB83AD29AC1A7AB3468B794C");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "1AB1C42FC52F4FBE");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 60ull);
    CHECK(tmi_ffs(a) == 1ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "1010C42F0527401A");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "DEB9F7AFE5BF5FBE");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "CEA93380E0981FA4");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "C52F4FBE000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "25B7501A000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "1AB1C42FC52F4FBF");
    CHECK(tml::to_string(tmi_inc(b), 16) == "D418F7AF25B7501B");
    CHECK(tml::to_string(tmi_dec(a), 16) == "1AB1C42FC52F4FBD");
    CHECK(tml::to_string(tmi_dec(b), 16) == "D418F7AF25B75019");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "1000000001AB1C42FC52F4FBE");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "100000000D418F7AF25B7501A");
    CHECK(tmi_low(a) == 0x1AB1C42FC52F4FBEull);
    CHECK(tmi_low(b) == 0xD418F7AF25B7501Aull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xbe, 0x4f, 0x2f, 0xc5, 0x2f, 0xc4, 0xb1, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x1a, 0x50, 0xb7, 0x25, 0xaf, 0xf7, 0x18, 0xd4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 22") {
    tmi_uint128_t a = tmi_from_string("907F96694BA955F3", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("3B96D91ABA018EA", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0xA);
    CHECK(tml::to_string(a, 10) == "10412206242488997363");
    CHECK(tml::to_string(b, 10) == "268366125222336746");
    CHECK(tml::to_string(a, 2) == "1001000001111111100101100110100101001011101010010101010111110011");
    CHECK(tml::to_string(b, 2) == "1110111001011011011001000110101011101000000001100011101010");
    CHECK(tml::to_string(a, 16) == "907F96694BA955F3");
    CHECK(tml::to_string(b, 16) == "3B96D91ABA018EA");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "943903FAF7496EDD");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "8CC628D7A0093D09");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "21A28CF7A2947824C2FE73911B7581E");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "26");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2F952C9D1E5A337");
    CHECK(tmi_fls(b) == 57ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "3904010BA010E2");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "93FFFFF9EBA95DFB");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "93C6FBF8E0094D19");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "241FE59A52EA557CC00");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "241FE59A52EA55");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "EE5B646AE8063A800");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "EE5B646AE806");
    CHECK(tml::to_string(tmi_inc(a), 16) == "907F96694BA955F4");
    CHECK(tml::to_string(tmi_inc(b), 16) == "3B96D91ABA018EB");
    CHECK(tml::to_string(tmi_dec(a), 16) == "907F96694BA955F2");
    CHECK(tml::to_string(tmi_dec(b), 16) == "3B96D91ABA018E9");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "907F96694BA955F3");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "3B96D91ABA01CEA");
    CHECK(tmi_low(a) == 0x907F96694BA955F3ull);
    CHECK(tmi_low(b) == 0x03B96D91ABA018EAull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 29ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xf3, 0x55, 0xa9, 0x4b, 0x69, 0x96, 0x7f, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xea, 0x18, 0xa0, 0xab, 0x91, 0x6d, 0xb9, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 23") {
    tmi_uint128_t a = tmi_from_string("297A21D76BC78BF5", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("6F62E63A1A5356B5", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x4B);
    CHECK(tml::to_string(a, 10) == "2988738511823670261");
    CHECK(tml::to_string(b, 10) == "8026230623151806133");
    CHECK(tml::to_string(a, 2) == "10100101111010001000011101011101101011110001111000101111110101");
    CHECK(tml::to_string(b, 2) == "110111101100010111001100011101000011010010100110101011010110101");
    CHECK(tml::to_string(a, 16) == "297A21D76BC78BF5");
    CHECK(tml::to_string(b, 16) == "6F62E63A1A5356B5");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "98DD0811861AE2AA");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFFBA173B9D51743540");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "120BFABA8089E5CBB64054EF7F894239");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "297A21D76BC78BF5");
    CHECK(tmi_fls(b) == 62ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 61ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "296220120A4302B5");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "6F7AE7FF7BD7DFF5");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "4618C7ED7194DD40");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "D10EBB5E3C5FA8000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "1731D0D29AB5A8000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "297A21D76BC78BF6");
    CHECK(tml::to_string(tmi_inc(b), 16) == "6F62E63A1A5356B6");
    CHECK(tml::to_string(tmi_dec(a), 16) == "297A21D76BC78BF4");
    CHECK(tml::to_string(tmi_dec(b), 16) == "6F62E63A1A5356B4");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "800297A21D76BC78BF5");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "8006F62E63A1A5356B5");
    CHECK(tmi_low(a) == 0x297A21D76BC78BF5ull);
    CHECK(tmi_low(b) == 0x6F62E63A1A5356B5ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xf5, 0x8b, 0xc7, 0x6b, 0xd7, 0x21, 0x7a, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xb5, 0x56, 0x53, 0x1a, 0x3a, 0xe6, 0x62, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 24") {
    tmi_uint128_t a = tmi_from_string("40DF7C9A8CDA80A3", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("35263B4519A2105C", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x6);
    CHECK(tml::to_string(a, 10) == "4674591941463802019");
    CHECK(tml::to_string(b, 10) == "3829813701094019164");
    CHECK(tml::to_string(a, 2) == "100000011011111011111001001101010001100110110101000000010100011");
    CHECK(tml::to_string(b, 2) == "11010100100110001110110100010100011001101000100001000001011100");
    CHECK(tml::to_string(a, 16) == "40DF7C9A8CDA80A3");
    CHECK(tml::to_string(b, 16) == "35263B4519A2105C");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "7605B7DFA67C90FF");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "BB9415573387047");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "D77F4FD828D3DEC6365261C98B66A94");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "BB9415573387047");
    CHECK(tmi_fls(b) == 61ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 62ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "6380008820000");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "75FF7FDF9DFA90FF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "75F947DF957890FF");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "1037DF26A336A028C0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1037DF26A336A02");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "D498ED14668841700");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "D498ED14668841");
    CHECK(tml::to_string(tmi_inc(a), 16) == "40DF7C9A8CDA80A4");
    CHECK(tml::to_string(tmi_inc(b), 16) == "35263B4519A2105D");
    CHECK(tml::to_string(tmi_dec(a), 16) == "40DF7C9A8CDA80A2");
    CHECK(tml::to_string(tmi_dec(b), 16) == "35263B4519A2105B");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "40DF7C9A8CDA80E3");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "35263B4519A2105C");
    CHECK(tmi_low(a) == 0x40DF7C9A8CDA80A3ull);
    CHECK(tmi_low(b) == 0x35263B4519A2105Cull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 30ull);
    CHECK(tmi_popcount(b) == 26ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xa3, 0x80, 0xda, 0x8c, 0x9a, 0x7c, 0xdf, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x5c, 0x10, 0xa2, 0x19, 0x45, 0x3b, 0x26, 0x35, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 25") {
    tmi_uint128_t a = tmi_from_string("C96FA75802B087F8", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("98B8DA9FB9FAD67E", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x50);
    CHECK(tml::to_string(a, 10) == "14515004120482482168");
    CHECK(tml::to_string(b, 10) == "11004786069034686078");
    CHECK(tml::to_string(a, 2) == "1100100101101111101001110101100000000010101100001000011111111000");
    CHECK(tml::to_string(b, 2) == "1001100010111000110110101001111110111001111110101101011001111110");
    CHECK(tml::to_string(a, 16) == "C96FA75802B087F8");
    CHECK(tml::to_string(b, 16) == "98B8DA9FB9FAD67E");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "1622881F7BCAB5E76");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "30B6CCB848B5B17A");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "782BBFA34C0BB14F7A69C53FE4BC3C10");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "30B6CCB848B5B17A");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 3ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "8828821800B08678");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "D9FFFFDFBBFAD7FE");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "51D77DC7BB4A5186");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "A75802B087F800000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "DA9FB9FAD67E00000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "C96FA75802B087F9");
    CHECK(tml::to_string(tmi_inc(b), 16) == "98B8DA9FB9FAD67F");
    CHECK(tml::to_string(tmi_dec(a), 16) == "C96FA75802B087F7");
    CHECK(tml::to_string(tmi_dec(b), 16) == "98B8DA9FB9FAD67D");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "10000C96FA75802B087F8");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "1000098B8DA9FB9FAD67E");
    CHECK(tmi_low(a) == 0xC96FA75802B087F8ull);
    CHECK(tmi_low(b) == 0x98B8DA9FB9FAD67Eull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 40ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xf8, 0x87, 0xb0, 0x2, 0x58, 0xa7, 0x6f, 0xc9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x7e, 0xd6, 0xfa, 0xb9, 0x9f, 0xda, 0xb8, 0x98, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 26") {
    tmi_uint128_t a = tmi_from_string("101E75EB6607B615", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("99F86C8DF845AED9", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x40);
    CHECK(tml::to_string(a, 10) == "1161495407797712405");
    CHECK(tml::to_string(b, 10) == "11094737039038721753");
    CHECK(tml::to_string(a, 2) == "1000000011110011101011110101101100110000001111011011000010101");
    CHECK(tml::to_string(b, 2) == "1001100111111000011011001000110111111000010001011010111011011001");
    CHECK(tml::to_string(a, 16) == "101E75EB6607B615");
    CHECK(tml::to_string(b, 16) == "99F86C8DF845AED9");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "AA16E2795E4D64EE");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFF7626095D6DC2073C");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "9B1D8D1B62D9A7195AA11EC25F49DCD");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "101E75EB6607B615");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 60ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "101864896005A611");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "99FE7DEFFE47BEDD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "89E619669E4218CC");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "101E75EB6607B6150000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "99F86C8DF845AED90000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "101E75EB6607B616");
    CHECK(tml::to_string(tmi_inc(b), 16) == "99F86C8DF845AEDA");
    CHECK(tml::to_string(tmi_dec(a), 16) == "101E75EB6607B614");
    CHECK(tml::to_string(tmi_dec(b), 16) == "99F86C8DF845AED8");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "1101E75EB6607B615");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "199F86C8DF845AED9");
    CHECK(tmi_low(a) == 0x101E75EB6607B615ull);
    CHECK(tmi_low(b) == 0x99F86C8DF845AED9ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 35ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x15, 0xb6, 0x7, 0x66, 0xeb, 0x75, 0x1e, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xd9, 0xae, 0x45, 0xf8, 0x8d, 0x6c, 0xf8, 0x99, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 27") {
    tmi_uint128_t a = tmi_from_string("8AFC5BEEE4264C9F", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("4EAC98D63534CCAE", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x14);
    CHECK(tml::to_string(a, 10) == "10014980752953199775");
    CHECK(tml::to_string(b, 10) == "5669074076735687854");
    CHECK(tml::to_string(a, 2) == "1000101011111100010110111110111011100100001001100100110010011111");
    CHECK(tml::to_string(b, 2) == "100111010101100100110001101011000110101001101001100110010101110");
    CHECK(tml::to_string(a, 16) == "8AFC5BEEE4264C9F");
    CHECK(tml::to_string(b, 16) == "4EAC98D63534CCAE");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "D9A8F4C5195B194D");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "3C4FC318AEF17FF1");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "2AB6988AB0728FA814E194BC1262C812");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "3C4FC318AEF17FF1");
    CHECK(tmi_fls(b) == 62ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "AAC18C624244C8E");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "CEFCDBFEF536CCBF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "C450C338D1128031");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "8AFC5BEEE4264C9F00000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "8AFC5BEEE42");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "4EAC98D63534CCAE00000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "4EAC98D6353");
    CHECK(tml::to_string(tmi_inc(a), 16) == "8AFC5BEEE4264CA0");
    CHECK(tml::to_string(tmi_inc(b), 16) == "4EAC98D63534CCAF");
    CHECK(tml::to_string(tmi_dec(a), 16) == "8AFC5BEEE4264C9E");
    CHECK(tml::to_string(tmi_dec(b), 16) == "4EAC98D63534CCAD");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "8AFC5BEEE4364C9F");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "4EAC98D63534CCAE");
    CHECK(tmi_low(a) == 0x8AFC5BEEE4264C9Full);
    CHECK(tmi_low(b) == 0x4EAC98D63534CCAEull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 32ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x9f, 0x4c, 0x26, 0xe4, 0xee, 0x5b, 0xfc, 0x8a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xae, 0xcc, 0x34, 0x35, 0xd6, 0x98, 0xac, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 28") {
    tmi_uint128_t a = tmi_from_string("A8266954E896A65", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("943863A59C842B6A", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x3E);
    CHECK(tml::to_string(a, 10) == "757280478805453413");
    CHECK(tml::to_string(b, 10) == "10680396079255792490");
    CHECK(tml::to_string(a, 2) == "101010000010011001101001010101001110100010010110101001100101");
    CHECK(tml::to_string(b, 2) == "1001010000111000011000111010010110011100100001000010101101101010");
    CHECK(tml::to_string(a, 16) == "A8266954E896A65");
    CHECK(tml::to_string(b, 16) == "943863A59C842B6A");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "9EBACA3AEB0D95CF");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFF764A02EFB2053EFB");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "615B3EBFC355EB48EE06BCD01D904D2");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "A8266954E896A65");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 59ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "62850C802A60");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "9EBA67B5DE8D6B6F");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "9EBA0530D20D410F");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "2A099A553A25A994000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "250E18E967210ADA8000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "2");
    CHECK(tml::to_string(tmi_inc(a), 16) == "A8266954E896A66");
    CHECK(tml::to_string(tmi_inc(b), 16) == "943863A59C842B6B");
    CHECK(tml::to_string(tmi_dec(a), 16) == "A8266954E896A64");
    CHECK(tml::to_string(tmi_dec(b), 16) == "943863A59C842B69");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "4A8266954E896A65");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "D43863A59C842B6A");
    CHECK(tmi_low(a) == 0x0A8266954E896A65ull);
    CHECK(tmi_low(b) == 0x943863A59C842B6Aull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 27ull);
    CHECK(tmi_popcount(b) == 28ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x65, 0x6a, 0x89, 0x4e, 0x95, 0x66, 0x82, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x6a, 0x2b, 0x84, 0x9c, 0xa5, 0x63, 0x38, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 29") {
    tmi_uint128_t a = tmi_from_string("5373B76385C1B33", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("449FD49B12840EA1", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x13);
    CHECK(tml::to_string(a, 10) == "375834472846465843");
    CHECK(tml::to_string(b, 10) == "4944904678371757729");
    CHECK(tml::to_string(a, 2) == "10100110111001110110111011000111000010111000001101100110011");
    CHECK(tml::to_string(b, 2) == "100010010011111110101001001101100010010100001000000111010100001");
    CHECK(tml::to_string(a, 16) == "5373B76385C1B33");
    CHECK(tml::to_string(b, 16) == "449FD49B12840EA1");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "49D710114AE029D4");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "FFFFFFFFFFFFFFFFC09766DB25D80C92");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "165ED6E3B74F2A41CE019B717B5E513");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "5373B76385C1B33");
    CHECK(tmi_fls(b) == 62ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 58ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "417101210040A21");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "45BFFFFF3ADC1FB3");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "41A8EFED2AD81592");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "29B9DBB1C2E0D9980000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "A6E76EC70B");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "224FEA4D8942075080000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "893FA936250");
    CHECK(tml::to_string(tmi_inc(a), 16) == "5373B76385C1B34");
    CHECK(tml::to_string(tmi_inc(b), 16) == "449FD49B12840EA2");
    CHECK(tml::to_string(tmi_dec(a), 16) == "5373B76385C1B32");
    CHECK(tml::to_string(tmi_dec(b), 16) == "449FD49B12840EA0");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "5373B76385C1B33");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "449FD49B128C0EA1");
    CHECK(tmi_low(a) == 0x05373B76385C1B33ull);
    CHECK(tmi_low(b) == 0x449FD49B12840EA1ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 32ull);
    CHECK(tmi_popcount(b) == 27ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x33, 0x1b, 0x5c, 0x38, 0x76, 0x3b, 0x37, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xa1, 0xe, 0x84, 0x12, 0x9b, 0xd4, 0x9f, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 30") {
    tmi_uint128_t a = tmi_from_string("C6B5A1C62DF810B90000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("243BD888FC2222D2", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x4E);
    CHECK(tml::to_string(a, 10) == "264130230066157230394731252478789025792");
    CHECK(tml::to_string(b, 10) == "2610918491848581842");
    CHECK(tml::to_string(a, 2) == "11000110101101011010000111000110001011011111100000010000101110010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "10010000111011110110001000100011111100001000100010001011010010");
    CHECK(tml::to_string(a, 16) == "C6B5A1C62DF810B90000000000000000");
    CHECK(tml::to_string(b, 16) == "243BD888FC2222D2");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "C6B5A1C62DF810B9243BD888FC2222D2");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "C6B5A1C62DF810B8DBC4277703DDDD2E");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "4A954C5CFC4849C20000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "57BEDBC54F512A7BC");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "17AD944B25736FC8");
    CHECK(tmi_fls(b) == 61ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "C6B5A1C62DF810B9243BD888FC2222D2");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "C6B5A1C62DF810B9243BD888FC2222D2");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "31AD68718B7E0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "F6223F0888B480000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "C6B5A1C62DF810B90000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "243BD888FC2222D3");
    CHECK(tml::to_string(tmi_dec(a), 16) == "C6B5A1C62DF810B8FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "243BD888FC2222D1");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "C6B5A1C62DF850B90000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "4000243BD888FC2222D2");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x243BD888FC2222D2ull);
    CHECK(tmi_high(a) == 0xC6B5A1C62DF810B9ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 27ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb9, 0x10, 0xf8, 0x2d, 0xc6, 0xa1, 0xb5, 0xc6});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xd2, 0x22, 0x22, 0xfc, 0x88, 0xd8, 0x3b, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 31") {
    tmi_uint128_t a = tmi_from_string("E4CD607520552F5F0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("8BA56D3424452ECF", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x50);
    CHECK(tml::to_string(a, 10) == "304130360285983926127820626426949795840");
    CHECK(tml::to_string(b, 10) == "10062569013143482063");
    CHECK(tml::to_string(a, 2) == "11100100110011010110000001110101001000000101010100101111010111110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1000101110100101011011010011010000100100010001010010111011001111");
    CHECK(tml::to_string(a, 16) == "E4CD607520552F5F0000000000000000");
    CHECK(tml::to_string(b, 16) == "8BA56D3424452ECF");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "E4CD607520552F5F8BA56D3424452ECF");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "E4CD607520552F5E745A92CBDBBAD131");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "5537CE6F93FF5FD10000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1A370F6496893D1BE");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "4F1F2FEBA093435E");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "E4CD607520552F5F8BA56D3424452ECF");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "E4CD607520552F5F8BA56D3424452ECF");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "E4CD60752055");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "6D3424452ECF00000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "E4CD607520552F5F0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "8BA56D3424452ED0");
    CHECK(tml::to_string(tmi_dec(a), 16) == "E4CD607520552F5EFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "8BA56D3424452ECE");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "E4CD607520552F5F0000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "100008BA56D3424452ECF");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x8BA56D3424452ECFull);
    CHECK(tmi_high(a) == 0xE4CD607520552F5Full);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 32ull);
    CHECK(tmi_popcount(b) == 31ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x2f, 0x55, 0x20, 0x75, 0x60, 0xcd, 0xe4});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xcf, 0x2e, 0x45, 0x24, 0x34, 0x6d, 0xa5, 0x8b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 32") {
    tmi_uint128_t a = tmi_from_string("2D9B8EBF3497553C0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("8C9CF4406E1FB6AD", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x74);
    CHECK(tml::to_string(a, 10) == "60622961074413042142209666441707257856");
    CHECK(tml::to_string(b, 10) == "10132241819239429805");
    CHECK(tml::to_string(a, 2) == "101101100110111000111010111111001101001001011101010101001111000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1000110010011100111101000100000001101110000111111011011010101101");
    CHECK(tml::to_string(a, 16) == "2D9B8EBF3497553C0000000000000000");
    CHECK(tml::to_string(b, 16) == "8C9CF4406E1FB6AD");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "2D9B8EBF3497553C8C9CF4406E1FB6AD");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "2D9B8EBF3497553B73630BBF91E04953");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "FEFE4A8D3B21418C0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "530880A096799086");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "6DE89A2DCEE01172");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 125ull);
    CHECK(tmi_ffs(a) == 66ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "2D9B8EBF3497553C8C9CF4406E1FB6AD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "2D9B8EBF3497553C8C9CF4406E1FB6AD");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "2D9");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "6AD00000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "2D9B8EBF3497553C0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "8C9CF4406E1FB6AE");
    CHECK(tml::to_string(tmi_dec(a), 16) == "2D9B8EBF3497553BFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "8C9CF4406E1FB6AC");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "2D9B8EBF3497553C0000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "100000000000008C9CF4406E1FB6AD");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x8C9CF4406E1FB6ADull);
    CHECK(tmi_high(a) == 0x2D9B8EBF3497553Cull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c, 0x55, 0x97, 0x34, 0xbf, 0x8e, 0x9b, 0x2d});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xad, 0xb6, 0x1f, 0x6e, 0x40, 0xf4, 0x9c, 0x8c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 33") {
    tmi_uint128_t a = tmi_from_string("56B30574D6172ADF0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("6AABCB78EEC1754C", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0xF);
    CHECK(tml::to_string(a, 10) == "115243139443953168976884836754845073408");
    CHECK(tml::to_string(b, 10) == "7686460909300053324");
    CHECK(tml::to_string(a, 2) == "1010110101100110000010101110100110101100001011100101010110111110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "110101010101011110010110111100011101110110000010111010101001100");
    CHECK(tml::to_string(a, 16) == "56B30574D6172ADF0000000000000000");
    CHECK(tml::to_string(b, 16) == "6AABCB78EEC1754C");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "56B30574D6172ADF6AABCB78EEC1754C");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "56B30574D6172ADE95543487113E8AB4");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "FD92E362C997A5340000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "D011D9BC41D6F7CD");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2ADA1D7BCD60BE24");
    CHECK(tmi_fls(b) == 62ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "56B30574D6172ADF6AABCB78EEC1754C");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "56B30574D6172ADF6AABCB78EEC1754C");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "82BA6B0B956F80000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "AD660AE9AC2E55BE000000000000");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "3555E5BC7760BAA60000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "D55796F1DD82");
    CHECK(tml::to_string(tmi_inc(a), 16) == "56B30574D6172ADF0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "6AABCB78EEC1754D");
    CHECK(tml::to_string(tmi_dec(a), 16) == "56B30574D6172ADEFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "6AABCB78EEC1754B");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "56B30574D6172ADF0000000000008000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "6AABCB78EEC1F54C");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x6AABCB78EEC1754Cull);
    CHECK(tmi_high(a) == 0x56B30574D6172ADFull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 34ull);
    CHECK(tmi_popcount(b) == 35ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdf, 0x2a, 0x17, 0xd6, 0x74, 0x5, 0xb3, 0x56});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x4c, 0x75, 0xc1, 0xee, 0x78, 0xcb, 0xab, 0x6a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 34") {
    tmi_uint128_t a = tmi_from_string("66AD51FD906704C30000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("16D8E80E9CC930D3", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x2D);
    CHECK(tml::to_string(a, 10) == "136481185891181339370380869460830453760");
    CHECK(tml::to_string(b, 10) == "1646320813261533395");
    CHECK(tml::to_string(a, 2) == "1100110101011010101000111111101100100000110011100000100110000110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1011011011000111010000000111010011100110010010011000011010011");
    CHECK(tml::to_string(a, 16) == "66AD51FD906704C30000000000000000");
    CHECK(tml::to_string(b, 16) == "16D8E80E9CC930D3");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "66AD51FD906704C316D8E80E9CC930D3");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "66AD51FD906704C2E92717F16336CF2D");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "CCA4184E6E87CB90000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "47E7A88712DF8A6DD");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "B424C18CD4007D9");
    CHECK(tmi_fls(b) == 60ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "66AD51FD906704C316D8E80E9CC930D3");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "66AD51FD906704C316D8E80E9CC930D3");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "E0986000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "3356A8FEC833826180000");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "2DB1D01D399261A600000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "B6C7");
    CHECK(tml::to_string(tmi_inc(a), 16) == "66AD51FD906704C30000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "16D8E80E9CC930D4");
    CHECK(tml::to_string(tmi_dec(a), 16) == "66AD51FD906704C2FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "16D8E80E9CC930D2");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "66AD51FD906704C30000200000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "16D8E80E9CC930D3");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x16D8E80E9CC930D3ull);
    CHECK(tmi_high(a) == 0x66AD51FD906704C3ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 29ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc3, 0x4, 0x67, 0x90, 0xfd, 0x51, 0xad, 0x66});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xd3, 0x30, 0xc9, 0x9c, 0xe, 0xe8, 0xd8, 0x16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 35") {
    tmi_uint128_t a = tmi_from_string("501FC6F43D061F790000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("382F21E4A57B7700", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x5E);
    CHECK(tml::to_string(a, 10) == "106503236133067013779468063434229153792");
    CHECK(tml::to_string(b, 10) == "4048491855941957376");
    CHECK(tml::to_string(a, 2) == "1010000000111111100011011110100001111010000011000011111011110010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "11100000101111001000011110010010100101011110110111011100000000");
    CHECK(tml::to_string(a, 16) == "501FC6F43D061F790000000000000000");
    CHECK(tml::to_string(b, 16) == "382F21E4A57B7700");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "501FC6F43D061F79382F21E4A57B7700");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "501FC6F43D061F78C7D0DE1B5A848900");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "2AE36D5BF4C43F000000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "16D14DA7889E56329");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "170B44424D34F100");
    CHECK(tmi_fls(b) == 61ull);
    CHECK(tmi_ffs(b) == 8ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "501FC6F43D061F79382F21E4A57B7700");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "501FC6F43D061F79382F21E4A57B7700");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1407F1BD0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "295EDDC0000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "501FC6F43D061F790000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "382F21E4A57B7701");
    CHECK(tml::to_string(tmi_dec(a), 16) == "501FC6F43D061F78FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "382F21E4A57B76FF");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "501FC6F47D061F790000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "40000000382F21E4A57B7700");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x382F21E4A57B7700ull);
    CHECK(tmi_high(a) == 0x501FC6F43D061F79ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 33ull);
    CHECK(tmi_popcount(b) == 30ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x79, 0x1f, 0x6, 0x3d, 0xf4, 0xc6, 0x1f, 0x50});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x77, 0x7b, 0xa5, 0xe4, 0x21, 0x2f, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 36") {
    tmi_uint128_t a = tmi_from_string("B14B69DC4C78C7AB0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("BC85E5DEB386D25C", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x1F);
    CHECK(tml::to_string(a, 10) == "235664924625191232889761730323145555968");
    CHECK(tml::to_string(b, 10) == "13584516595690426972");
    CHECK(tml::to_string(a, 2) == "10110001010010110110100111011100010011000111100011000111101010110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1011110010000101111001011101111010110011100001101101001001011100");
    CHECK(tml::to_string(a, 16) == "B14B69DC4C78C7AB0000000000000000");
    CHECK(tml::to_string(b, 16) == "BC85E5DEB386D25C");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "B14B69DC4C78C7ABBC85E5DEB386D25C");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "B14B69DC4C78C7AA437A1A214C792DA4");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "B1E95A05A3B407740000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "F0C0AB0245FF6BC0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "2AB64139AB51C700");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "B14B69DC4C78C7ABBC85E5DEB386D25C");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "B14B69DC4C78C7ABBC85E5DEB386D25C");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "263C63D5800000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "16296D3B898F18F5600000000");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "5E42F2EF59C3692E00000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "1790BCBBD");
    CHECK(tml::to_string(tmi_inc(a), 16) == "B14B69DC4C78C7AB0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "BC85E5DEB386D25D");
    CHECK(tml::to_string(tmi_dec(a), 16) == "B14B69DC4C78C7AAFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "BC85E5DEB386D25B");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "B14B69DC4C78C7AB0000000080000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "BC85E5DEB386D25C");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0xBC85E5DEB386D25Cull);
    CHECK(tmi_high(a) == 0xB14B69DC4C78C7ABull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 34ull);
    CHECK(tmi_popcount(b) == 35ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xab, 0xc7, 0x78, 0x4c, 0xdc, 0x69, 0x4b, 0xb1});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x5c, 0xd2, 0x86, 0xb3, 0xde, 0xe5, 0x85, 0xbc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 37") {
    tmi_uint128_t a = tmi_from_string("4027054627E125A40000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("D589A58C842C19A", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x59);
    CHECK(tml::to_string(a, 10) == "85273198278078969845483736008929312768");
    CHECK(tml::to_string(b, 10) == "961688226551218586");
    CHECK(tml::to_string(a, 2) == "1000000001001110000010101000110001001111110000100100101101001000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "110101011000100110100101100011001000010000101100000110011010");
    CHECK(tml::to_string(a, 16) == "4027054627E125A40000000000000000");
    CHECK(tml::to_string(b, 16) == "D589A58C842C19A");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "4027054627E125A40D589A58C842C19A");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "4027054627E125A3F2A765A737BD3E66");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "981AD6188F1948A80000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "4CE8C3DFA963B3309");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "3CADBC4CE978396");
    CHECK(tmi_fls(b) == 59ull);
    CHECK(tmi_ffs(b) == 1ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 66ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "4027054627E125A40D589A58C842C19A");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "4027054627E125A40D589A58C842C19A");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "201382A313");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "B1908583340000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "4027054627E125A40000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "D589A58C842C19B");
    CHECK(tml::to_string(tmi_dec(a), 16) == "4027054627E125A3FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "D589A58C842C199");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "4027054627E125A40000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "20000000D589A58C842C19A");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x0D589A58C842C19Aull);
    CHECK(tmi_high(a) == 0x4027054627E125A4ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 24ull);
    CHECK(tmi_popcount(b) == 25ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa4, 0x25, 0xe1, 0x27, 0x46, 0x5, 0x27, 0x40});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x9a, 0xc1, 0x42, 0xc8, 0x58, 0x9a, 0x58, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 38") {
    tmi_uint128_t a = tmi_from_string("A0E200454153BBC70000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("71EF5E7A14FE7EBC", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x61);
    CHECK(tml::to_string(a, 10) == "213849943902576377427746126750258561024");
    CHECK(tml::to_string(b, 10) == "8209884524150947516");
    CHECK(tml::to_string(a, 2) == "10100000111000100000000001000101010000010101001110111011110001110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "111000111101111010111100111101000010100111111100111111010111100");
    CHECK(tml::to_string(a, 16) == "A0E200454153BBC70000000000000000");
    CHECK(tml::to_string(b, 16) == "71EF5E7A14FE7EBC");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "A0E200454153BBC771EF5E7A14FE7EBC");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "A0E200454153BBC68E10A185EB018144");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "168F33990B5BD8240000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "1697C9902DF034F0F");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "3E4E8184FBC68EFC");
    CHECK(tmi_fls(b) == 62ull);
    CHECK(tmi_ffs(b) == 2ull);
    CHECK(tmi_fls(a) == 127ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "A0E200454153BBC771EF5E7A14FE7EBC");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "A0E200454153BBC771EF5E7A14FE7EBC");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "50710022");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "29FCFD78000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "A0E200454153BBC70000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "71EF5E7A14FE7EBD");
    CHECK(tml::to_string(tmi_dec(a), 16) == "A0E200454153BBC6FFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "71EF5E7A14FE7EBB");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "A0E200474153BBC70000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "20000000071EF5E7A14FE7EBC");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0x71EF5E7A14FE7EBCull);
    CHECK(tmi_high(a) == 0xA0E200454153BBC7ull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 26ull);
    CHECK(tmi_popcount(b) == 41ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0xbb, 0x53, 0x41, 0x45, 0x0, 0xe2, 0xa0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0xbc, 0x7e, 0xfe, 0x14, 0x7a, 0x5e, 0xef, 0x71, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 39") {
    tmi_uint128_t a = tmi_from_string("6ED3F30BE746EBEB0000000000000000", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("E8FB46B52A2D551F", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x7C);
    CHECK(tml::to_string(a, 10) == "147315583742111845829071510673373003776");
    CHECK(tml::to_string(b, 10) == "16788089779864294687");
    CHECK(tml::to_string(a, 2) == "1101110110100111111001100001011111001110100011011101011111010110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(b, 2) == "1110100011111011010001101011010100101010001011010101010100011111");
    CHECK(tml::to_string(a, 16) == "6ED3F30BE746EBEB0000000000000000");
    CHECK(tml::to_string(b, 16) == "E8FB46B52A2D551F");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "6ED3F30BE746EBEBE8FB46B52A2D551F");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6ED3F30BE746EBEA1704B94AD5D2AAE1");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "A976BB8E943A98750000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "79C715346920545C");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "9243722D9CE73CDC");
    CHECK(tmi_fls(b) == 63ull);
    CHECK(tmi_ffs(b) == 0ull);
    CHECK(tmi_fls(a) == 126ull);
    CHECK(tmi_ffs(a) == 64ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "6ED3F30BE746EBEBE8FB46B52A2D551F");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "6ED3F30BE746EBEBE8FB46B52A2D551F");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "6");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "F0000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "6ED3F30BE746EBEB0000000000000001");
    CHECK(tml::to_string(tmi_inc(b), 16) == "E8FB46B52A2D5520");
    CHECK(tml::to_string(tmi_dec(a), 16) == "6ED3F30BE746EBEAFFFFFFFFFFFFFFFF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "E8FB46B52A2D551E");
    CHECK(tmi_lt(a, b) == false);
    CHECK(tmi_lte(a, b) == false);
    CHECK(tmi_gt(a, b) == true);
    CHECK(tmi_gte(a, b) == true);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == 1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "7ED3F30BE746EBEB0000000000000000");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "1000000000000000E8FB46B52A2D551F");
    CHECK(tmi_low(a) == 0x0000000000000000ull);
    CHECK(tmi_low(b) == 0xE8FB46B52A2D551Full);
    CHECK(tmi_high(a) == 0x6ED3F30BE746EBEBull);
    CHECK(tmi_high(b) == 0x0000000000000000ull);
    CHECK(tmi_popcount(a) == 40ull);
    CHECK(tmi_popcount(b) == 35ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xeb, 0xeb, 0x46, 0xe7, 0xb, 0xf3, 0xd3, 0x6e});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x1f, 0x55, 0x2d, 0x2a, 0xb5, 0x46, 0xfb, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
}

TEST_CASE("generated test 40") {
    tmi_uint128_t a = tmi_from_string("9B0A6817F91C85FD", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("F93EE7CCDAE720B20000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x5B);
    CHECK(tml::to_string(a, 10) == "11171856277818869245");
    CHECK(tml::to_string(b, 10) == "331304394822583956516441750950536806400");
    CHECK(tml::to_string(a, 2) == "1001101100001010011010000001011111111001000111001000010111111101");
    CHECK(tml::to_string(b, 2) == "11111001001111101110011111001100110110101110011100100000101100100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "9B0A6817F91C85FD");
    CHECK(tml::to_string(b, 16) == "F93EE7CCDAE720B20000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "F93EE7CCDAE720B29B0A6817F91C85FD");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "6C118332518DF4E9B0A6817F91C85FD");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "39EB83411FDFC9EA0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "9B0A6817F91C85FD");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "F93EE7CCDAE720B29B0A6817F91C85FD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "F93EE7CCDAE720B29B0A6817F91C85FD");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "BFC8E42FE80000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "1F27DCF99B");
    CHECK(tml::to_string(tmi_inc(a), 16) == "9B0A6817F91C85FE");
    CHECK(tml::to_string(tmi_inc(b), 16) == "F93EE7CCDAE720B20000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "9B0A6817F91C85FC");
    CHECK(tml::to_string(tmi_dec(b), 16) == "F93EE7CCDAE720B1FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == true);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "80000009B0A6817F91C85FD");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "F93EE7CCDAE720B20000000000000000");
    CHECK(tmi_low(a) == 0x9B0A6817F91C85FDull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0xF93EE7CCDAE720B2ull);
    CHECK(tmi_popcount(a) == 33ull);
    CHECK(tmi_popcount(b) == 37ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xfd, 0x85, 0x1c, 0xf9, 0x17, 0x68, 0xa, 0x9b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb2, 0x20, 0xe7, 0xda, 0xcc, 0xe7, 0x3e, 0xf9});
}

TEST_CASE("generated test 41") {
    tmi_uint128_t a = tmi_from_string("920F3663357D6F2E", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("BF4CC64591BE34EB0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x4B);
    CHECK(tml::to_string(a, 10) == "10524690653915213614");
    CHECK(tml::to_string(b, 10) == "254281183185117587367242482796436914176");
    CHECK(tml::to_string(a, 2) == "1001001000001111001101100110001100110101011111010110111100101110");
    CHECK(tml::to_string(b, 2) == "10111111010011001100011001000101100100011011111000110100111010110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "920F3663357D6F2E");
    CHECK(tml::to_string(b, 16) == "BF4CC64591BE34EB0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "BF4CC64591BE34EB920F3663357D6F2E");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "40B339BA6E41CB15920F3663357D6F2E");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "7C655E6726DE673A0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "920F3663357D6F2E");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 1ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "BF4CC64591BE34EB920F3663357D6F2E");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "BF4CC64591BE34EB920F3663357D6F2E");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "79B319ABEB7970000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "17E998C8B237C6");
    CHECK(tml::to_string(tmi_inc(a), 16) == "920F3663357D6F2F");
    CHECK(tml::to_string(tmi_inc(b), 16) == "BF4CC64591BE34EB0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "920F3663357D6F2D");
    CHECK(tml::to_string(tmi_dec(b), 16) == "BF4CC64591BE34EAFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "800920F3663357D6F2E");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "BF4CC64591BE3CEB0000000000000000");
    CHECK(tmi_low(a) == 0x920F3663357D6F2Eull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0xBF4CC64591BE34EBull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 35ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x2e, 0x6f, 0x7d, 0x35, 0x63, 0x36, 0xf, 0x92, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xeb, 0x34, 0xbe, 0x91, 0x45, 0xc6, 0x4c, 0xbf});
}

TEST_CASE("generated test 42") {
    tmi_uint128_t a = tmi_from_string("22F7D343A63E0C32", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("8744D3C0C234472F0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x0);
    CHECK(tml::to_string(a, 10) == "2519714804042435634");
    CHECK(tml::to_string(b, 10) == "179803150477680876564944456977544642560");
    CHECK(tml::to_string(a, 2) == "10001011110111110100110100001110100110001111100000110000110010");
    CHECK(tml::to_string(b, 2) == "10000111010001001101001111000000110000100011010001000111001011110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "22F7D343A63E0C32");
    CHECK(tml::to_string(b, 16) == "8744D3C0C234472F0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "8744D3C0C234472F22F7D343A63E0C32");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "78BB2C3F3DCBB8D122F7D343A63E0C32");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "C2AEB1DF18EE1B2E0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "22F7D343A63E0C32");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 61ull);
    CHECK(tmi_ffs(a) == 1ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "8744D3C0C234472F22F7D343A63E0C32");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "8744D3C0C234472F22F7D343A63E0C32");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "22F7D343A63E0C32");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "22F7D343A63E0C32");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "8744D3C0C234472F0000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "8744D3C0C234472F0000000000000000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "22F7D343A63E0C33");
    CHECK(tml::to_string(tmi_inc(b), 16) == "8744D3C0C234472F0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "22F7D343A63E0C31");
    CHECK(tml::to_string(tmi_dec(b), 16) == "8744D3C0C234472EFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "22F7D343A63E0C33");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "8744D3C0C234472F0000000000000001");
    CHECK(tmi_low(a) == 0x22F7D343A63E0C32ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x8744D3C0C234472Full);
    CHECK(tmi_popcount(a) == 31ull);
    CHECK(tmi_popcount(b) == 28ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x32, 0xc, 0x3e, 0xa6, 0x43, 0xd3, 0xf7, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x47, 0x34, 0xc2, 0xc0, 0xd3, 0x44, 0x87});
}

TEST_CASE("generated test 43") {
    tmi_uint128_t a = tmi_from_string("713B831B1FB7F628", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("7E0750EA924841940000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x60);
    CHECK(tml::to_string(a, 10) == "8159259302431290920");
    CHECK(tml::to_string(b, 10) == "167520714724339628027636458509364625408");
    CHECK(tml::to_string(a, 2) == "111000100111011100000110001101100011111101101111111011000101000");
    CHECK(tml::to_string(b, 2) == "1111110000001110101000011101010100100100100100001000001100101000000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "713B831B1FB7F628");
    CHECK(tml::to_string(b, 16) == "7E0750EA924841940000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "7E0750EA92484194713B831B1FB7F628");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "81F8AF156DB7BE6C713B831B1FB7F628");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "D095056C171A77200000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "713B831B1FB7F628");
    CHECK(tmi_fls(b) == 126ull);
    CHECK(tmi_ffs(b) == 66ull);
    CHECK(tmi_fls(a) == 62ull);
    CHECK(tmi_ffs(a) == 3ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "7E0750EA92484194713B831B1FB7F628");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "7E0750EA92484194713B831B1FB7F628");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "1FB7F628000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "7E0750EA");
    CHECK(tml::to_string(tmi_inc(a), 16) == "713B831B1FB7F629");
    CHECK(tml::to_string(tmi_inc(b), 16) == "7E0750EA924841940000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "713B831B1FB7F627");
    CHECK(tml::to_string(tmi_dec(b), 16) == "7E0750EA92484193FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "100000000713B831B1FB7F628");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "7E0750EB924841940000000000000000");
    CHECK(tmi_low(a) == 0x713B831B1FB7F628ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x7E0750EA92484194ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 26ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x28, 0xf6, 0xb7, 0x1f, 0x1b, 0x83, 0x3b, 0x71, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0x41, 0x48, 0x92, 0xea, 0x50, 0x7, 0x7e});
}

TEST_CASE("generated test 44") {
    tmi_uint128_t a = tmi_from_string("D454F36DBD1296CD", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("B3F0B94C4E2A89F50000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x73);
    CHECK(tml::to_string(a, 10) == "15300121486733514445");
    CHECK(tml::to_string(b, 10) == "239181720782856583657896051246127644672");
    CHECK(tml::to_string(a, 2) == "1101010001010100111100110110110110111101000100101001011011001101");
    CHECK(tml::to_string(b, 2) == "10110011111100001011100101001100010011100010101010001001111101010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "D454F36DBD1296CD");
    CHECK(tml::to_string(b, 16) == "B3F0B94C4E2A89F50000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "B3F0B94C4E2A89F5D454F36DBD1296CD");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "4C0F46B3B1D5760BD454F36DBD1296CD");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "52DE4B10192007310000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "D454F36DBD1296CD");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "B3F0B94C4E2A89F5D454F36DBD1296CD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "B3F0B94C4E2A89F5D454F36DBD1296CD");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "B6680000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "0");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "167E");
    CHECK(tml::to_string(tmi_inc(a), 16) == "D454F36DBD1296CE");
    CHECK(tml::to_string(tmi_inc(b), 16) == "B3F0B94C4E2A89F50000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "D454F36DBD1296CC");
    CHECK(tml::to_string(tmi_dec(b), 16) == "B3F0B94C4E2A89F4FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "8000000000000D454F36DBD1296CD");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "B3F8B94C4E2A89F50000000000000000");
    CHECK(tmi_low(a) == 0xD454F36DBD1296CDull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0xB3F0B94C4E2A89F5ull);
    CHECK(tmi_popcount(a) == 35ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xcd, 0x96, 0x12, 0xbd, 0x6d, 0xf3, 0x54, 0xd4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf5, 0x89, 0x2a, 0x4e, 0x4c, 0xb9, 0xf0, 0xb3});
}

TEST_CASE("generated test 45") {
    tmi_uint128_t a = tmi_from_string("AB3920349EBA8775", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("1157C8B3BFAF9E2F0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x3F);
    CHECK(tml::to_string(a, 10) == "12337928064531597173");
    CHECK(tml::to_string(b, 10) == "23052676478121866125658825000331771904");
    CHECK(tml::to_string(a, 2) == "1010101100111001001000000011010010011110101110101000011101110101");
    CHECK(tml::to_string(b, 2) == "10001010101111100100010110011101111111010111110011110001011110000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "AB3920349EBA8775");
    CHECK(tml::to_string(b, 16) == "1157C8B3BFAF9E2F0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "1157C8B3BFAF9E2FAB3920349EBA8775");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "EEA8374C405061D1AB3920349EBA8775");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "7BC62F0227D4147B0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "AB3920349EBA8775");
    CHECK(tmi_fls(b) == 124ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "1157C8B3BFAF9E2FAB3920349EBA8775");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "1157C8B3BFAF9E2FAB3920349EBA8775");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "559C901A4F5D43BA8000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "80000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "22AF91677F5F3C5E");
    CHECK(tml::to_string(tmi_inc(a), 16) == "AB3920349EBA8776");
    CHECK(tml::to_string(tmi_inc(b), 16) == "1157C8B3BFAF9E2F0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "AB3920349EBA8774");
    CHECK(tml::to_string(tmi_dec(b), 16) == "1157C8B3BFAF9E2EFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "AB3920349EBA8775");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "1157C8B3BFAF9E2F8000000000000000");
    CHECK(tmi_low(a) == 0xAB3920349EBA8775ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x1157C8B3BFAF9E2Full);
    CHECK(tmi_popcount(a) == 32ull);
    CHECK(tmi_popcount(b) == 38ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x75, 0x87, 0xba, 0x9e, 0x34, 0x20, 0x39, 0xab, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x9e, 0xaf, 0xbf, 0xb3, 0xc8, 0x57, 0x11});
}

TEST_CASE("generated test 46") {
    tmi_uint128_t a = tmi_from_string("683115A8055198C0", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("C47ADDC92D9B4F220000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x2);
    CHECK(tml::to_string(a, 10) == "7507805865191250112");
    CHECK(tml::to_string(b, 10) == "261166645742082415084264693834771857408");
    CHECK(tml::to_string(a, 2) == "110100000110001000101011010100000000101010100011001100011000000");
    CHECK(tml::to_string(b, 2) == "11000100011110101101110111001001001011011001101101001111001000100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "683115A8055198C0");
    CHECK(tml::to_string(b, 16) == "C47ADDC92D9B4F220000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "C47ADDC92D9B4F22683115A8055198C0");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "3B852236D264B0DE683115A8055198C0");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "B4CF8F61F3989800000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "683115A8055198C0");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 62ull);
    CHECK(tmi_ffs(a) == 6ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "C47ADDC92D9B4F22683115A8055198C0");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "C47ADDC92D9B4F22683115A8055198C0");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "1A0C456A015466300");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1A0C456A01546630");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "11EB7724B66D3C880000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "311EB7724B66D3C88000000000000000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "683115A8055198C1");
    CHECK(tml::to_string(tmi_inc(b), 16) == "C47ADDC92D9B4F220000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "683115A8055198BF");
    CHECK(tml::to_string(tmi_dec(b), 16) == "C47ADDC92D9B4F21FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "683115A8055198C4");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "C47ADDC92D9B4F220000000000000004");
    CHECK(tmi_low(a) == 0x683115A8055198C0ull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0xC47ADDC92D9B4F22ull);
    CHECK(tmi_popcount(a) == 22ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xc0, 0x98, 0x51, 0x5, 0xa8, 0x15, 0x31, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x22, 0x4f, 0x9b, 0x2d, 0xc9, 0xdd, 0x7a, 0xc4});
}

TEST_CASE("generated test 47") {
    tmi_uint128_t a = tmi_from_string("DFBAAAFA6940776C", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("4264D159D53DDE5E0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x2B);
    CHECK(tml::to_string(a, 10) == "16121385808610490220");
    CHECK(tml::to_string(b, 10) == "88252523548566659009445098420325842944");
    CHECK(tml::to_string(a, 2) == "1101111110111010101010101111101001101001010000000111011101101100");
    CHECK(tml::to_string(b, 2) == "1000010011001001101000101011001110101010011110111011110010111100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "DFBAAAFA6940776C");
    CHECK(tml::to_string(b, 16) == "4264D159D53DDE5E0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "4264D159D53DDE5EDFBAAAFA6940776C");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "BD9B2EA62AC221A2DFBAAAFA6940776C");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "D526577DDDF781A80000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "DFBAAAFA6940776C");
    CHECK(tmi_fls(b) == 126ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 2ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "4264D159D53DDE5EDFBAAAFA6940776C");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "4264D159D53DDE5EDFBAAAFA6940776C");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "6FDD557D34A03BB600000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "1BF755");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "EEF2F000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "84C9A2B3AA7BBCBC00000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "DFBAAAFA6940776D");
    CHECK(tml::to_string(tmi_inc(b), 16) == "4264D159D53DDE5E0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "DFBAAAFA6940776B");
    CHECK(tml::to_string(tmi_dec(b), 16) == "4264D159D53DDE5DFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == true);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "DFBAAAFA6940776C");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "4264D159D53DDE5E0000080000000000");
    CHECK(tmi_low(a) == 0xDFBAAAFA6940776Cull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x4264D159D53DDE5Eull);
    CHECK(tmi_popcount(a) == 37ull);
    CHECK(tmi_popcount(b) == 34ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x6c, 0x77, 0x40, 0x69, 0xfa, 0xaa, 0xba, 0xdf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5e, 0xde, 0x3d, 0xd5, 0x59, 0xd1, 0x64, 0x42});
}

TEST_CASE("generated test 48") {
    tmi_uint128_t a = tmi_from_string("BEA7C879193FD24D", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("714699BDA826E5F10000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x2A);
    CHECK(tml::to_string(a, 10) == "13738169610757198413");
    CHECK(tml::to_string(b, 10) == "150569342538625512172383228031135645696");
    CHECK(tml::to_string(a, 2) == "1011111010100111110010000111100100011001001111111101001001001101");
    CHECK(tml::to_string(b, 2) == "1110001010001101001100110111101101010000010011011100101111100010000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "BEA7C879193FD24D");
    CHECK(tml::to_string(b, 16) == "714699BDA826E5F10000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "714699BDA826E5F1BEA7C879193FD24D");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "8EB9664257D91A0FBEA7C879193FD24D");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "13AFF6EB9BA1DB7D0000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "BEA7C879193FD24D");
    CHECK(tmi_fls(b) == 126ull);
    CHECK(tmi_ffs(b) == 64ull);
    CHECK(tmi_fls(a) == 63ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "714699BDA826E5F1BEA7C879193FD24D");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "714699BDA826E5F1BEA7C879193FD24D");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "2FA9F21E464FF49340000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "2FA9F2");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "9B97C400000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "1C51A66F6A09B97C400000");
    CHECK(tml::to_string(tmi_inc(a), 16) == "BEA7C879193FD24E");
    CHECK(tml::to_string(tmi_inc(b), 16) == "714699BDA826E5F10000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "BEA7C879193FD24C");
    CHECK(tml::to_string(tmi_dec(b), 16) == "714699BDA826E5F0FFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "BEA7CC79193FD24D");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "714699BDA826E5F10000040000000000");
    CHECK(tmi_low(a) == 0xBEA7C879193FD24Dull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x714699BDA826E5F1ull);
    CHECK(tmi_popcount(a) == 36ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0x4d, 0xd2, 0x3f, 0x19, 0x79, 0xc8, 0xa7, 0xbe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf1, 0xe5, 0x26, 0xa8, 0xbd, 0x99, 0x46, 0x71});
}

TEST_CASE("generated test 49") {
    tmi_uint128_t a = tmi_from_string("66E4792717D259AD", /*base=*/16);
    tmi_uint128_t b = tmi_from_string("873116F03579C67E0000000000000000", /*base=*/16);
    tmi_uint128_t shift_amount = tmi_make_low(0x3C);
    CHECK(tml::to_string(a, 10) == "7414184095369025965");
    CHECK(tml::to_string(b, 10) == "179700667221352056053560316997763334144");
    CHECK(tml::to_string(a, 2) == "110011011100100011110010010011100010111110100100101100110101101");
    CHECK(tml::to_string(b, 2) == "10000111001100010001011011110000001101010111100111000110011111100000000000000000000000000000000000000000000000000000000000000000");
    CHECK(tml::to_string(a, 16) == "66E4792717D259AD");
    CHECK(tml::to_string(b, 16) == "873116F03579C67E0000000000000000");
    CHECK(tml::to_string(tmi_add(a, b), 16) == "873116F03579C67E66E4792717D259AD");
    CHECK(tml::to_string(tmi_sub(a, b), 16) == "78CEE90FCA86398266E4792717D259AD");
    CHECK(tml::to_string(tmi_mul(a, b), 16) == "83969CD79EA8F1260000000000000000");
    CHECK(tml::to_string(tmi_div(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_mod(a, b), 16) == "66E4792717D259AD");
    CHECK(tmi_fls(b) == 127ull);
    CHECK(tmi_ffs(b) == 65ull);
    CHECK(tmi_fls(a) == 62ull);
    CHECK(tmi_ffs(a) == 0ull);
    CHECK(tml::to_string(tmi_and(a, b), 16) == "0");
    CHECK(tml::to_string(tmi_or(a, b), 16) == "873116F03579C67E66E4792717D259AD");
    CHECK(tml::to_string(tmi_xor(a, b), 16) == "873116F03579C67E66E4792717D259AD");
    CHECK(tml::to_string(tmi_shl(a, shift_amount), 16) == "66E4792717D259AD000000000000000");
    CHECK(tml::to_string(tmi_shr(a, shift_amount), 16) == "6");
    CHECK(tml::to_string(tmi_shl(b, shift_amount), 16) == "E0000000000000000000000000000000");
    CHECK(tml::to_string(tmi_shr(b, shift_amount), 16) == "873116F03579C67E0");
    CHECK(tml::to_string(tmi_inc(a), 16) == "66E4792717D259AE");
    CHECK(tml::to_string(tmi_inc(b), 16) == "873116F03579C67E0000000000000001");
    CHECK(tml::to_string(tmi_dec(a), 16) == "66E4792717D259AC");
    CHECK(tml::to_string(tmi_dec(b), 16) == "873116F03579C67DFFFFFFFFFFFFFFFF");
    CHECK(tmi_lt(a, b) == true);
    CHECK(tmi_lte(a, b) == true);
    CHECK(tmi_gt(a, b) == false);
    CHECK(tmi_gte(a, b) == false);
    CHECK(tmi_eq(a, b) == false);
    CHECK(tmi_cmp(a, b) == -1);
    CHECK(tmi_is_zero(a) == false);
    CHECK(tmi_is_zero(b) == false);
    CHECK(tmi_is_not_zero(a) == true);
    CHECK(tmi_is_not_zero(b) == true);
    CHECK(tmi_is_bit_set(a, tmi_low(shift_amount)) == false);
    CHECK(tmi_is_bit_set(b, tmi_low(shift_amount)) == false);
    CHECK(tml::to_string(tmi_set_bit(a, tmi_low(shift_amount)), 16) == "76E4792717D259AD");
    CHECK(tml::to_string(tmi_set_bit(b, tmi_low(shift_amount)), 16) == "873116F03579C67E1000000000000000");
    CHECK(tmi_low(a) == 0x66E4792717D259ADull);
    CHECK(tmi_low(b) == 0x0000000000000000ull);
    CHECK(tmi_high(a) == 0x0000000000000000ull);
    CHECK(tmi_high(b) == 0x873116F03579C67Eull);
    CHECK(tmi_popcount(a) == 34ull);
    CHECK(tmi_popcount(b) == 33ull);
    CHECK(tmi_to_bytes(a) == tmi_bytes{0xad, 0x59, 0xd2, 0x17, 0x27, 0x79, 0xe4, 0x66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0});
    CHECK(tmi_to_bytes(b) == tmi_bytes{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e, 0xc6, 0x79, 0x35, 0xf0, 0x16, 0x31, 0x87});
}

